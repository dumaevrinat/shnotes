{"version":3,"sources":["context.js","api/api.js","Components/DialogCreateNotebook/index.jsx","Components/Pages/HomePage/index.jsx","actions/error.js","actions/types.js","actions/notes.js","Components/Note/index.jsx","actions/taskers.js","Components/Task/index.jsx","Components/Tasker/index.jsx","Components/NoteBuilder/index.jsx","Components/TaskerBuilder/index.jsx","Components/Builder/index.jsx","actions/notebook.js","Components/Menu/index.jsx","Components/Header/index.jsx","Components/DialogUpdateNotebook/index.jsx","Components/DialogDeleteNotebook/index.jsx","utils/getErrorMessage.js","Components/Pages/NotebookPage/index.jsx","Components/Pages/NotebookNotFoundPage/index.jsx","Components/App/index.jsx","reducers/notes.js","reducers/taskers.js","reducers/notebook.js","reducers/error.js","reducers/index.js","store/index.js","index.js"],"names":["Context","React","createContext","axios","create","baseURL","useStyles","makeStyles","theme","root","CreateNotebookDialog","open","classes","history","useHistory","setIsOpenCreateNotebookDialog","useContext","useState","notebookName","setNotebookName","Dialog","className","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","label","type","value","onInput","event","target","DialogActions","Button","onClick","color","notebook","name","API","post","then","result","push","data","catch","handleCreateNotebook","display","flexDirection","justifyContent","title","marginTop","spacing","marginBottom","mainButton","animation","HomePage","isOpenCreateNotebookDialog","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Container","maxWidth","Provider","Grow","in","Typography","variant","size","startIcon","ArrowForward","options","setHasError","hasError","payload","createError","error","dispatch","updateNote","newNote","setNotesLoading","isLoading","content","paddingBottom","actions","paddingTop","paddingLeft","paddingRight","text","whiteSpace","priority","borderColor","palette","secondary","light","Note","useDispatch","expanded","setExpanded","handleExpandClick","Card","clsx","highPriority","onMouseOver","onMouseOut","CardContent","Fade","CardActions","Tooltip","Checkbox","checked","icon","StarBorder","checkedIcon","Star","onChange","done","IconButton","aria-label","id","get","params","noteId","Close","setTaskersLoading","alignItems","textDone","textDecoration","doneCheckBox","padding","marginRight","deleteButton","main","Task","CheckCircleOutline","CheckCircle","newTask","taskId","HighlightOff","Tasker","tasks","map","task","key","newTasker","taskListId","NoteBuilder","setText","InputBase","placeholder","multiline","width","TaskerBuilder","tasker","setTasker","updateTask","index","newTaskListsData","slice","deleteTask","splice","addNewTask","length","onKeyDown","taskIndex","handleKeyDown","Add","inputTitle","height","typography","h6","fontSize","fontWeight","tools","Builder","notebookStringId","isTasker","setIsTasker","setTitle","noteData","setNoteData","taskerData","setTaskerData","setHighPriority","handleAddButton","note","notebookId","AssignmentTurnedIn","Assignment","disableElevation","setNotebookLoading","list","itemIconNotebook","primary","itemIconTag","itemIconChange","itemIconDelete","nested","link","Menu","isOpenMenu","notebookUrl","toggleMenu","setIsOpenDeleteNotebookDialog","setIsOpenUpdateNotebookDialog","isOpenTags","setIsOpenTags","Drawer","transitionDuration","to","activeClassName","ListItem","button","Divider","List","subheader","ListSubheader","ListItemIcon","BookOutlined","ListItemText","Hidden","smUp","copy","ShareOutlined","LocalOfferOutlined","ExpandLess","Collapse","disablePadding","Chip","FilterListOutlined","clickable","EditOutlined","DeleteOutline","flexGrow","menuButton","editButton","Header","AppBar","position","elevation","Toolbar","edge","xsDown","Share","UpdateNotebookDialog","useSelector","state","stringId","notebookNameTextField","setNotebookNameTextField","handleUpdateNotebook","updateNotebookName","useEffect","DeleteNotebookDialog","getErrorMessageByType","progressBar","expand","transform","marginLeft","transition","transitions","duration","shortest","expandOpen","NotebookPage","props","expandedNotes","setExpandedNotes","expandedTaskLists","setExpandedTaskLists","notes","taskers","isLoadingNotes","noteLoading","isLoadingTaskers","taskerLoading","setIsOpenMenu","isOpenUpdateNotebookDialog","isOpenDeleteNotebookDialog","match","response","code","status","getTaskers","location","pathname","timeout","CircularProgress","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","reason","NotebookNotFoundPage","HomeOutlined","createMuiTheme","App","ThemeProvider","responsiveFontSizes","exact","path","component","initialState","notebookLoading","combineReducers","action","filter","item","taskerIndex","findIndex","newTaskers","unshift","createStore","rootReducer","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"smjIAIeA,EAFCC,IAAMC,gB,sDCAPC,E,OAAAA,EAAMC,OAAO,CACxBC,QAAQ,mCCYNC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,OAIK,SAASC,EAAT,GAAuC,IAARC,EAAO,EAAPA,KACpCC,EAAUN,IACVO,EAAUC,cAETC,EAAgCC,qBAAWhB,GAA3Ce,8BAJ0C,EAMTE,mBAAS,IANA,mBAM1CC,EAN0C,KAM5BC,EAN4B,KAwBjD,OACI,kBAACC,EAAA,EAAD,CACIC,UAAWT,EAAQH,KACnBE,KAAMA,EACNW,QAAS,kBAAMP,GAA8B,KAE7C,kBAACQ,EAAA,EAAD,6HACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,iRAGA,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,WAAS,EACTC,MAAM,oGACNC,KAAK,OACLC,MAAOb,EACPc,QAAS,SAACC,GAAD,OAAWd,EAAgBc,EAAMC,OAAOH,WAGzD,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAMtB,GAA8B,IAAQuB,MAAM,WAAnE,kCAGA,kBAACF,EAAA,EAAD,CAAQC,QAAS,kBAxCA,WACzB,IAAME,EAAW,CACbC,KAAMtB,GAGVuB,EACKC,KAAK,gBAAiBH,GACtBI,MAAK,SAACC,GACH/B,EAAQgC,KAAR,oBAA0BD,EAAOE,UAEpCC,OAAM,eAGXhC,GAA8B,GA2BCiC,IAAwBV,MAAM,WAArD,gD,+BCvDVhC,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFwC,QAAS,OACTC,cAAe,SACfC,eAAgB,iBAEpBC,MAAO,CACHC,UAAW7C,EAAM8C,QAAQ,GACzBC,aAAc/C,EAAM8C,QAAQ,IAEhCE,WAAY,GACZC,UAAW,CACPJ,UAAW7C,EAAM8C,QAAQ,QAIlB,SAASI,IACpB,IAAM9C,EAAUN,IADe,EAGqCW,oBAAS,GAH9C,mBAGxB0C,EAHwB,KAGI5C,EAHJ,KAKzB6C,EAAiB,CACnBC,MAAM,EACNC,UAAU,EACVC,cAAeA,EACfC,iBAAkB,CACdC,oBAAqB,mBAI7B,OACI,yBAAK5C,UAAWT,EAAQH,MACpB,kBAACyD,EAAA,EAAD,CAAWC,SAAS,MAChB,kBAAC,EAAQC,SAAT,CAAkBrC,MAAO,CAAChB,kCAEtB,kBAACL,EAAD,CAAsBC,KAAMgD,IAE5B,kBAACU,EAAA,EAAD,CAAMC,IAAI,GACN,6BACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKnD,UAAWT,EAAQwC,OAA5C,waAIA,kBAAChB,EAAA,EAAD,CACIf,UAAWT,EAAQ4C,WACnBgB,QAAQ,WACRlC,MAAM,UACNmC,KAAK,QACLC,UAAW,kBAACC,EAAA,EAAD,MACXtC,QAAS,kBAAMtB,GAA8B,KANjD,2FAaR,yBAAKM,UAAWT,EAAQ6C,WACpB,kBAAC,IAAD,CAAQmB,QAAShB,Q,oHCpE5BiB,EAAc,SAACC,GAAD,MAAe,CACtChD,KCoBqB,YDnBrBiD,QAASD,IAGAE,EAAc,SAACC,GAAD,OAAW,SAACC,GACnCA,EAASL,GAAY,IAErBK,EAAS,CACLpD,KCWoB,eDVpBiD,QAASE,ME4CJE,EAAa,SAACC,GAAD,OAAa,SAACF,GACpCzC,EACKC,KAAK,eAAgB0C,GACrBzC,MAAK,kBAAMuC,EAAS,CACjBpD,KDzDe,cC0DfiD,QAASK,OAEZrC,OAAM,SAACkC,GACJC,EAASF,EAAY,CAAClD,KD7DP,sBCiErBuD,EAAkB,SAACC,GAAD,MAAgB,CACpCxD,KDrEyB,gBCsEzBiD,QAASO,I,SCpDPhF,EAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF8C,aAAc/C,EAAM8C,QAAQ,IAEhCiC,QAAS,CACLC,cAAe,GAEnBC,QAAS,CACLC,WAAY,EACZC,YAAanF,EAAM8C,QAAQ,GAC3BsC,aAAcpF,EAAM8C,QAAQ,GAC5BL,QAAS,OACTE,eAAgB,iBAEpBC,MAAO,CACHG,aAAc/C,EAAM8C,QAAQ,IAEhCuC,KAAM,CACFC,WAAY,YAEhBC,SAAU,CACNC,YAAaxF,EAAMyF,QAAQC,UAAUC,WAI9B,SAASC,EAAT,GAAuB,IAARtD,EAAO,EAAPA,KACpBlC,EAAUN,IACV4E,EAAWmB,cAFgB,EAIDpF,oBAAS,GAJR,mBAI1BqF,EAJ0B,KAIhBC,EAJgB,KAM3BC,EAAoB,WACtBD,GAAaD,IAIjB,OACI,kBAACjC,EAAA,EAAD,CAAMC,IAAI,GACN,kBAACmC,EAAA,EAAD,CACIpF,UAAWqF,YAAK9F,EAAQH,KAAMqC,EAAK6D,cAAgB/F,EAAQmF,UAC3DvB,QAAQ,WACRoC,YAAa,kBAAMJ,KACnBK,WAAY,kBAAML,MAElB,kBAACM,EAAA,EAAD,CAAazF,UAAWT,EAAQ2E,SAC5B,kBAAChB,EAAA,EAAD,CAAYC,QAAQ,KAAKnD,UAAWT,EAAQwC,OACvCN,EAAKM,OAEV,kBAACmB,EAAA,EAAD,CAAYlD,UAAWT,EAAQiF,MAC1B/C,EAAK+C,OAGd,kBAACkB,EAAA,EAAD,CAAMzC,GAAIgC,GACN,kBAACU,EAAA,EAAD,CAAa3F,UAAWT,EAAQ6E,SAC5B,8BACA,6BACI,kBAACwB,EAAA,EAAD,CAAS7D,MAAON,EAAK6D,aAAe,oGAAsB,qGACtD,kBAACO,EAAA,EAAD,CACIC,QAASrE,EAAK6D,aACdlC,KAAK,QACL2C,KAAM,kBAACC,EAAA,EAAD,MACNC,YAAa,kBAACC,EAAA,EAAD,MACbC,SAAU,WACNtC,EAASC,EAAW,2BAAIrC,GAAL,IAAW6D,cAAe7D,EAAK6D,qBAI9D,kBAACM,EAAA,EAAD,CAAS7D,MAAON,EAAK2E,KAAO,yDAAc,uEACtC,kBAACP,EAAA,EAAD,CACIC,QAASrE,EAAK2E,KACdhD,KAAK,QACLnC,MAAM,UACNkF,SAAU,WACNtC,EAASC,EAAW,2BAAIrC,GAAL,IAAW2E,MAAO3E,EAAK2E,aAItD,kBAACR,EAAA,EAAD,CAAS7D,MAAM,8CACX,kBAACsE,EAAA,EAAD,CAAYC,aAAW,6CAAUlD,KAAK,QAAQpC,QAAS,WDxD7D,IAACuF,ECyDS1C,GDzDT0C,ECyD6B9E,EAAK8E,GDzD3B,SAAC1C,GAC/BzC,EACKoF,IAAI,eAAgB,CACjBC,OAAQ,CACJC,OAAQH,KAGfjF,MAAK,kBAAMuC,EAAS,CACjBpD,KD9Ce,cC+CfiD,QAAS6C,OAEZ7E,OAAM,SAACkC,GACJC,EAASF,EAAY,CAAClD,KDlDP,yBEiGS,kBAACkG,EAAA,EAAD,a,0CCQ9BC,GAAoB,SAAC3C,GAAD,MAAgB,CACtCxD,KHtG2B,kBGuG3BiD,QAASO,ICnGPhF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFwC,QAAS,OACTiF,WAAY,UAEhBrC,KAAM,CACFC,WAAY,YAEhBqC,SAAU,CACNC,eAAgB,gBAEpBC,aAAc,CACVC,QAAS9H,EAAM8C,QAAQ,IACvBiF,YAAa/H,EAAM8C,QAAQ,IAE/BkF,aAAc,CACVF,QAAS9H,EAAM8C,QAAQ,IACvBiF,YAAa/H,EAAM8C,QAAQ,GAC3BhB,MAAO9B,EAAMyF,QAAQC,UAAUuC,UAIxB,SAASC,GAAT,GAAuB,IAAR5F,EAAO,EAAPA,KACpBlC,EAAUN,KACV4E,EAAWmB,cAEjB,OACI,yBAAKhF,UAAWT,EAAQH,MACpB,kBAACyG,EAAA,EAAD,CACI7F,UAAWT,EAAQyH,aACnBlB,QAASrE,EAAK2E,KACdnF,MAAM,UACN8E,KAAM,kBAACuB,EAAA,EAAD,MACNrB,YAAa,kBAACsB,GAAA,EAAD,MACbpB,SAAU,WDoCA,IAACqB,ECnCP3D,GDmCO2D,ECnCa,2BAAI/F,GAAL,IAAW2E,MAAO3E,EAAK2E,ODmCvB,SAACvC,GACpCzC,EACKC,KAAK,eAAgBmG,GACrBlG,MAAK,kBAAMuC,EAAS,CACjBpD,KHvEe,cGwEfiD,QAAS8D,OAEZ9F,OAAM,WACHmC,EAASF,EAAY,CAAClD,KH3EP,0BIoCf,kBAAC4F,EAAA,EAAD,CACIrG,UAAWT,EAAQ4H,aACnBb,aAAW,6CACXtF,QAAS,kBAAM6C,GDwCJ0C,ECxCwB9E,EAAK8E,GDwCtB,SAAC1C,GAC/BzC,EACKoF,IAAI,eAAgB,CACrBC,OAAQ,CACJgB,OAAQlB,KAEXjF,MAAK,kBAAMuC,EAAS,CACjBpD,KHrFe,cGsFfiD,QAAS6C,OAEZ7E,OAAM,WACHmC,EAASF,EAAY,CAAClD,KHzFP,uBG8ED,IAAC8F,ICtCX,kBAACmB,GAAA,EAAD,OAGJ,kBAACxE,EAAA,EAAD,CAAYlD,UAAWqF,YAAK9F,EAAQiF,KAAM/C,EAAK2E,MAAQ7G,EAAQuH,WAC1DrF,EAAK+C,OCzCtB,IAAMvF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF8C,aAAc/C,EAAM8C,QAAQ,IAEhCF,MAAO,CACHG,aAAc/C,EAAM8C,QAAQ,IAEhCiC,QAAS,CACLC,cAAe,GAEnBC,QAAS,CACLC,WAAY,EACZE,aAAcpF,EAAM8C,QAAQ,GAC5BL,QAAS,OACTE,eAAgB,iBAEpB4C,SAAU,CACNC,YAAaxF,EAAMyF,QAAQC,UAAUC,WAI9B,SAAS6C,GAAT,GAAyB,IAARlG,EAAO,EAAPA,KACtBlC,EAAUN,KACV4E,EAAWmB,cAFkB,EAIHpF,oBAAS,GAJN,mBAI5BqF,EAJ4B,KAIlBC,EAJkB,KAM7BC,EAAoB,WACtBD,GAAaD,IAGjB,OACI,kBAACjC,EAAA,EAAD,CAAMC,IAAI,GACN,kBAACmC,EAAA,EAAD,CACIpF,UAAWqF,YAAK9F,EAAQH,KAAMqC,EAAK6D,cAAgB/F,EAAQmF,UAC3DvB,QAAQ,WACRoC,YAAa,kBAAMJ,KACnBK,WAAY,kBAAML,MAElB,kBAACM,EAAA,EAAD,CAAazF,UAAWT,EAAQ2E,SAC5B,kBAAChB,EAAA,EAAD,CAAYC,QAAQ,KAAKnD,UAAWT,EAAQwC,OACvCN,EAAKM,OAGTN,EAAKmG,MAAMC,KAAI,SAACC,GAAD,OAAU,kBAACT,GAAD,CAAM5F,KAAMqG,EAAMC,IAAKD,EAAKvB,SAG1D,kBAACb,EAAA,EAAD,CAAMzC,GAAIgC,GACN,kBAACU,EAAA,EAAD,CAAa3F,UAAWT,EAAQ6E,SAC5B,8BACA,6BACI,kBAACwB,EAAA,EAAD,CAAS7D,MAAON,EAAK6D,aAAe,oGAAsB,qGACtD,kBAACO,EAAA,EAAD,CACIC,QAASrE,EAAK6D,aACdlC,KAAK,QACL2C,KAAM,kBAACC,EAAA,EAAD,MACNC,YAAa,kBAACC,EAAA,EAAD,MACbC,SAAU,WFjClB,IAAC6B,EEkCWnE,GFlCXmE,EEkCiC,2BAAIvG,GAAL,IAAW6D,cAAe7D,EAAK6D,eFlCjD,SAACzB,GACxCzC,EACKC,KAAK,mBAAoB2G,GACzB1G,MAAK,SAACC,GAAD,OAAYsC,EAAS,CACvBpD,KHpCiB,gBGqCjBiD,QAASsE,OAEZtG,OAAM,WACHmC,EAASF,EAAY,CAAClD,KHxCL,6BKsED,kBAACmF,EAAA,EAAD,CAAS7D,MAAM,8CACX,kBAACsE,EAAA,EAAD,CAAYC,aAAW,6CAAUlD,KAAK,QAC1BpC,QAAS,kBAAM6C,GF5B9B0C,EE4BoD9E,EAAK8E,GF5BlD,SAAC1C,GACjCzC,EACKoF,IAAI,oBAAqB,CAC1BC,OAAQ,CACJwB,WAAY1B,KAEfjF,MAAK,kBAAMuC,EAAS,CACjBpD,KHlDiB,gBGmDjBiD,QAAS6C,OAEZ7E,OAAM,WACHmC,EAASF,EAAY,CAAClD,KHtDL,yBG2CD,IAAC8F,IE6BO,kBAACI,EAAA,EAAD,a,2EC7E9B1H,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF4C,UAAW7C,EAAM8C,QAAQ,QAIlB,SAASiG,GAAT,GAA8B,IAAR1D,EAAO,EAAPA,KAC3BjF,EAAUN,KAETkJ,EAAWxI,qBAAWhB,GAAtBwJ,QAEP,OACI,kBAACC,GAAA,EAAD,CACIpI,UAAWT,EAAQH,KACnBiJ,YAAY,4EACZ9H,WAAW,EACXG,MAAO8D,EACP8D,WAAS,EACT3H,QAAS,SAACC,GAAD,OAAWuH,EAAQvH,EAAMC,OAAOH,UCdrD,IAAMzB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF4C,UAAW7C,EAAM8C,QAAQ,GACzBL,QAAS,OACTC,cAAe,SACfgF,WAAY,UAEhBiB,KAAM,CACFlG,QAAS,OACTiF,WAAY,SACZ0B,MAAO,QAEX/D,KAAM,GAENwC,aAAc,CACVC,QAAS9H,EAAM8C,QAAQ,IACvBiF,YAAa/H,EAAM8C,QAAQ,IAE/BkF,aAAc,CACVF,QAAS9H,EAAM8C,QAAQ,IACvBiF,YAAa/H,EAAM8C,QAAQ,GAC3BhB,MAAO9B,EAAMyF,QAAQC,UAAUuC,UAIxB,SAASoB,GAAT,GAAkC,IAAVC,EAAS,EAATA,OAC7BlJ,EAAUN,KAETyJ,EAAa/I,qBAAWhB,GAAxB+J,UAEDC,EAAa,SAACC,EAAOpB,GACvB,IAAMqB,EAAmBJ,EAAOK,QAChCD,EAAiBD,GAASpB,EAE1BkB,EAAUG,IAGRE,EAAa,SAACH,GAChB,IAAMC,EAAmBJ,EAAOK,QAChCD,EAAiBG,OAAOJ,EAAO,GAC/BF,EAAUG,IAGRI,EAAa,WACf,IAAMJ,EAAmBJ,EAAOK,QAChCD,EAAiBrH,KAAK,CAClB4E,MAAM,EACN5B,KAAM,KAEVkE,EAAUG,IAkBd,OACI,yBAAK7I,UAAWT,EAAQH,MACnBqJ,EAAOZ,KAAI,SAACC,EAAMc,GAAP,OACR,yBAAK5I,UAAWT,EAAQuI,KAAMC,IAAKa,GAC/B,kBAAC/C,EAAA,EAAD,CACI7F,UAAWT,EAAQyH,aACnBlB,QAASgC,EAAK1B,KACdnF,MAAM,UACN8E,KAAM,kBAACuB,EAAA,EAAD,MACNrB,YAAa,kBAACsB,GAAA,EAAD,MACbpB,SAAU,WACNwC,EAAWC,EAAD,YAAC,eAAWd,GAAZ,IAAkB1B,MAAO0B,EAAK1B,WAI7B,IAAlBqC,EAAOS,QAAgB,kBAACtD,EAAA,EAAD,CAAS7D,MAAM,8CACnC,kBAACsE,EAAA,EAAD,CACIrG,UAAWT,EAAQ4H,aACnBb,aAAW,6CACXlD,KAAK,QACLpC,QAAS,kBAAM+H,EAAWH,KAE1B,kBAAClB,GAAA,EAAD,QAIR,kBAACU,GAAA,EAAD,CACIpI,UAAWT,EAAQiF,KACnB6D,YAAY,sEACZ9H,WAAW,EACXG,MAAOoH,EAAKtD,KACZlE,WAAW,EACXgI,WAAW,EACX3H,QAAS,SAACC,GAAD,OAAW+H,EAAWC,EAAD,YAAC,eAAWd,GAAZ,IAAkBtD,KAAM5D,EAAMC,OAAOH,UACnEyI,UAAW,SAACvI,GAAD,OAjDT,SAACA,EAAOwI,GAC1B,OAAQxI,EAAMmH,KACV,IAAK,QACDkB,IACA,MACJ,IAAK,YACqB,IAAlBR,EAAOS,QAA2C,KAA3BT,EAAOW,GAAW5E,MACzCuE,EAAWK,IA0CeC,CAAczI,EAAOgI,UAKvD,kBAACvC,EAAA,EAAD,CACIpF,MAAM,UACNqF,aAAW,wFACXtF,QAAS,kBAAMiI,MAEf,kBAACK,GAAA,EAAD,QCnGhB,IAAMrK,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACF4C,UAAW7C,EAAM8C,QAAQ,GACzBC,aAAc/C,EAAM8C,QAAQ,GAC5BL,QAAS,OACTC,cAAe,UAEnB0H,WAAY,CACRC,OAAQrK,EAAMsK,WAAWC,GAAGC,SAC5BA,SAAUxK,EAAMsK,WAAWC,GAAGC,SAC9BC,WAAYzK,EAAMsK,WAAWC,GAAGE,YAEpCxF,QAAS,CACL6C,QAAS9H,EAAM8C,QAAQ,GACvBL,QAAS,OACTE,eAAgB,iBAEpB4C,SAAU,CACNC,YAAaxF,EAAMyF,QAAQC,UAAUC,OAEzC+E,MAAO,OAGI,SAASC,GAAT,GAAsC,IAApBC,EAAmB,EAAnBA,iBACvBxK,EAAUN,KACV4E,EAAWmB,cAF+B,EAIhBpF,oBAAS,GAJO,mBAIzCoK,EAJyC,KAI/BC,EAJ+B,OAKtBrK,mBAAS,IALa,mBAKzCmC,EALyC,KAKlCmI,EALkC,OAOhBtK,mBAAS,IAPO,mBAOzCuK,EAPyC,KAO/BC,EAP+B,OAQZxK,mBAAS,CAAC,CAC1CwG,MAAM,EACN5B,KAAM,MAVsC,mBAQzC6F,EARyC,KAQ7BC,EAR6B,OAaR1K,oBAAS,GAbD,mBAazC0F,EAbyC,KAa3BiF,EAb2B,KAe1CC,EAAkB,WP/BL,IAACC,EECEhC,EK+BduB,GACAnG,GLhCc4E,EKgCK,CACfiC,WAAYX,EACZhI,MAAOA,EACP6F,MAAOyC,EACP/E,aAAcA,GLpCO,SAACzB,GAClCzC,EACKC,KAAK,gBAAiBoH,GACtBnH,MAAK,SAACC,GAAD,OAAYsC,EAAS,CACvBpD,KHzBc,aG0BdiD,QAASnC,EAAOE,UAEnBC,OAAM,WACHmC,EAASF,EAAY,CAAClD,KH7BR,sBQ4DdyJ,EAAS,IACTI,EAAc,CAAC,CACXlE,MAAM,EACN5B,KAAM,QAGVX,GP9CY4G,EO8CK,CACbrE,MAAM,EACNsE,WAAYX,EACZvF,KAAM2F,EACNpI,MAAOA,EACPuD,aAAcA,GPnDG,SAACzB,GAC9BzC,EACKC,KAAK,YAAaoJ,GAClBnJ,MAAK,SAACC,GAAD,OAAYsC,EAAS,CACvBpD,KD/BY,WCgCZiD,QAASnC,EAAOE,UAEnBC,OAAM,SAACkC,GACJC,EAASF,EAAY,CAAClD,KDnCV,oBQiFZyJ,EAAS,IACTE,EAAY,IACZG,GAAgB,KAIxB,OACI,kBAACvH,EAAA,EAAD,CAAMC,IAAI,GACN,kBAACmC,EAAA,EAAD,CAAMpF,UAAWqF,YAAK9F,EAAQH,KAAMkG,GAAgB/F,EAAQmF,UAAWvB,QAAQ,YAC3E,kBAACsC,EAAA,EAAD,KACI,kBAAC2C,GAAA,EAAD,CACIpI,UAAWT,EAAQgK,WACnBlB,YAAY,yDACZ9H,WAAW,EACXG,MAAOqB,EACPuG,WAAS,EACT3H,QAAS,SAACC,GAAD,OAAWsJ,EAAStJ,EAAMC,OAAOH,UAE9C,kBAAC,EAAQqC,SAAT,CAAkBrC,MAAO,CAACyH,QAASiC,EAAa1B,UAAW4B,IACtDN,EAAW,kBAACxB,GAAD,CAAeC,OAAQ4B,IAAgB,kBAACnC,GAAD,CAAa1D,KAAM2F,MAG9E,kBAACxE,EAAA,EAAD,CAAa3F,UAAWT,EAAQ6E,SAC5B,yBAAKpE,UAAWT,EAAQsK,OACpB,kBAACjE,EAAA,EAAD,CAAS7D,MAAOuD,EAAe,oGAAsB,qGACjD,kBAACO,EAAA,EAAD,CACIC,QAASR,EACTS,KAAM,kBAACC,EAAA,EAAD,MACNC,YAAa,kBAACC,EAAA,EAAD,MACbC,SAAU,WACNoE,GAAiBjF,OAI7B,kBAACM,EAAA,EAAD,CAAS7D,MAAOiI,EAAW,sEAAiB,8CACxC,kBAAC3D,EAAA,EAAD,CACIC,aAAY0D,EAAW,sEAAiB,6CACxChJ,QAAS,kBAAMiJ,GAAaD,KAE3BA,EAAW,kBAACW,GAAA,EAAD,MAAwB,kBAACC,GAAA,EAAD,SAIhD,kBAAC7J,EAAA,EAAD,CACIoC,QAAQ,WACRlC,MAAOqE,EAAe,YAAc,UACpCjC,UAAW,kBAACiG,GAAA,EAAD,MACXuB,kBAAgB,EAChB7J,QAAS,kBAAMwJ,MALnB,uDCtGb,IA6CDM,GAAqB,SAAC7G,GAAD,MAAgB,CACvCxD,KTrD4B,mBSsD5BiD,QAASO,I,8LC/CPhF,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,GACN2C,MAAO,CACHkF,QAAS9H,EAAM8C,QAAQ,IAE3B8I,KAAM,CACFnJ,QAAS,OACTC,cAAe,SACf0G,MAAO,IACPtB,QAAS,GAEb+D,iBAAkB,CACd/J,MAAO9B,EAAMyF,QAAQqG,QAAQnG,OAEjCoG,YAAa,CACTjK,MAAO9B,EAAMyF,QAAQqG,QAAQnG,OAEjCqG,eAAgB,CACZlK,MAAO9B,EAAMyF,QAAQqG,QAAQnG,OAEjCsG,eAAgB,CACZnK,MAAO9B,EAAMyF,QAAQC,UAAUuC,MAEnCiE,OAAQ,CACJ/G,YAAanF,EAAM8C,QAAQ,IAE/BqJ,KAAM,CACFvE,eAAgB,OAChB9F,MAAO,eAIA,SAASsK,GAAT,GAA0C,IAA3BC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,YAChClM,EAAUN,KACTyM,EAAc/L,qBAAWhB,GAAzB+M,WAF6C,EAMf/L,qBAAWhB,GAF5Ce,EAJgD,EAIhDA,8BACAiM,EALgD,EAKhDA,8BACAC,EANgD,EAMhDA,8BANgD,EAQhBhM,oBAAS,GARO,mBAQ7CiM,EAR6C,KAQjCC,EARiC,KAUpD,OACI,kBAACC,GAAA,EAAD,CAAQ/L,UAAWT,EAAQH,KAAM4M,mBAAoB,IAAK1M,KAAMkM,EAAYvL,QAAS,kBAAMyL,MACvF,kBAAC,IAAD,CAASO,GAAI,IAAKC,gBAAiB3M,EAAQ+L,MACvC,kBAACa,GAAA,EAAD,CAAUC,QAAM,GACZ,kBAAClJ,EAAA,EAAD,CAAYC,QAAQ,KAAKnD,UAAWT,EAAQwC,OAA5C,kBAKR,kBAACsK,GAAA,EAAD,MACA,kBAACC,GAAA,EAAD,CAAMtM,UAAWT,EAAQwL,KAAMwB,UAAW,kBAACC,GAAA,EAAD,+FACtC,kBAACL,GAAA,EAAD,CAAUC,QAAM,EAACpL,QAAS,WACtBtB,GAA8B,GAC9BgM,MAEA,kBAACe,GAAA,EAAD,CAAczM,UAAWT,EAAQyL,kBAAkB,kBAAC0B,GAAA,EAAD,OACnD,kBAACC,GAAA,EAAD,CAAc1B,QAAQ,4FAG9B,kBAACqB,GAAA,EAAD,CAAMtM,UAAWT,EAAQwL,KAAMwB,UAAW,kBAACC,GAAA,EAAD,kKACtC,kBAACI,GAAA,EAAD,CAAQC,MAAI,GACR,kBAACV,GAAA,EAAD,CAAUC,QAAM,EAACpL,QAAS,kBAAM8L,KAAK,0BAA4BrB,KAC7D,kBAACgB,GAAA,EAAD,CAAczM,UAAWT,EAAQ2L,aAAa,kBAAC6B,GAAA,EAAD,OAC9C,kBAACJ,GAAA,EAAD,CAAc1B,QAAQ,8GAG9B,kBAACkB,GAAA,EAAD,CAAUC,QAAM,EAACpL,QAAS,kBAAM8K,GAAeD,KAC3C,kBAACY,GAAA,EAAD,CAAczM,UAAWT,EAAQ2L,aAAa,kBAAC8B,GAAA,EAAD,OAC9C,kBAACL,GAAA,EAAD,CAAc1B,QAAQ,yCACrBY,EAAa,kBAACoB,GAAA,EAAD,MAAgB,kBAAC,KAAD,OAElC,kBAACC,GAAA,EAAD,CAAUjK,GAAI4I,GACV,kBAACS,GAAA,EAAD,CAAMa,gBAAc,GAChB,kBAAChB,GAAA,EAAD,CAAUnM,UAAWT,EAAQ8L,QACzB,kBAAC+B,GAAA,EAAD,CACIrH,KAAM,kBAACsH,GAAA,EAAD,MACNC,WAAS,EACT9M,MAAM,gBAKtB,kBAAC2L,GAAA,EAAD,CAAUC,QAAM,EAACpL,QAAS,kBAAM4K,GAA8B,KAC1D,kBAACa,GAAA,EAAD,CAAczM,UAAWT,EAAQ4L,gBAAgB,kBAACoC,GAAA,EAAD,OACjD,kBAACZ,GAAA,EAAD,CAAc1B,QAAQ,iGAE1B,kBAACkB,GAAA,EAAD,CAAUC,QAAM,EAACpL,QAAS,kBAAM2K,GAA8B,KAC1D,kBAACc,GAAA,EAAD,CAAczM,UAAWT,EAAQ6L,gBAAgB,kBAACoC,GAAA,EAAD,OACjD,kBAACb,GAAA,EAAD,CAAc1B,QAAQ,6F,uDCpGpChM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFwC,QAAS,OACT6L,SAAU,GAEdC,WAAY,CACRxG,YAAa/H,EAAM8C,QAAQ,GAC3BhB,MAAO,WAEXc,MAAO,CACHmF,YAAa/H,EAAM8C,QAAQ,IAE/B0L,WAAY,CACR1M,MAAO,UACPiG,YAAa/H,EAAM8C,QAAQ,QAIpB,SAAS2L,GAAT,GAAuC,IAAtB7L,EAAqB,EAArBA,MAAO0J,EAAc,EAAdA,YAC7BlM,EAAUN,KADiC,EAGGU,qBAAWhB,GAAxD+M,EAH0C,EAG1CA,WAAYE,EAH8B,EAG9BA,8BAEnB,OACI,yBAAK5L,UAAWT,EAAQH,MACpB,kBAACyO,GAAA,EAAD,CAAQC,SAAS,SAAS7M,MAAM,UAAU8M,UAAW,GACjD,kBAACC,GAAA,EAAD,KACI,kBAAC3H,EAAA,EAAD,CAAY4H,KAAK,QAAQjO,UAAWT,EAAQmO,WAAY1M,QAAS,kBAAM0K,MACnE,kBAAC,KAAD,OAEJ,kBAACxI,EAAA,EAAD,CAAYC,QAAQ,KAAKnD,UAAWT,EAAQwC,OACvCA,GAEJA,GACG,kBAAC6K,GAAA,EAAD,CAAQsB,QAAM,GACV,kBAAC7H,EAAA,EAAD,CACI4H,KAAK,QACLjO,UAAWT,EAAQoO,WACnB3M,QAAS,kBAAM4K,GAA8B,KAE7C,kBAAC2B,GAAA,EAAD,OAEJ,kBAACxM,EAAA,EAAD,CACIoC,QAAQ,YACRlC,MAAM,UACNmC,KAAK,QACLC,UAAW,kBAAC8K,GAAA,EAAD,MACXtD,kBAAgB,EAChB7J,QAAS,kBAAM8L,KAAK,0BAA4BrB,KANpD,+GC1C5B,IAAMxM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,OAIK,SAASgP,GAAT,GAAuC,IAAR9O,EAAO,EAAPA,KACpCC,EAAUN,KAEV4E,EAAWmB,cAEV4G,EAAgCjM,qBAAWhB,GAA3CiN,8BACD/L,EAAewO,aAAY,SAAAC,GAAK,OAAIA,EAAMpN,SAASA,SAASC,QAC5DoN,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMpN,SAASA,SAASqN,YAPb,EASS3O,mBAASC,GATlB,mBAS1C2O,EAT0C,KASnBC,EATmB,KAW3CC,EAAuB,WACzB7K,EHiB0B,SAAC0K,EAAUpN,GAAX,OAAoB,SAAC0C,GACnDzC,EACKoF,IAAI,mBAAoB,CACrBC,OAAQ,CACJiE,WAAY6D,EACZpN,KAAMA,KAGbG,MAAK,SAACC,GAAD,OAAYsC,EAAS,CACvBpD,KTpCmB,kBSqCnBiD,QAASvC,OAEZO,OAAM,SAACkC,GACJC,EAASF,EAAY,CAAClD,KTxCH,yBYUdkO,CAAmBJ,EAAUC,IACtC5C,GAA8B,IAOlC,OAJAgD,qBAAU,WACNH,EAAyB5O,KAC1B,CAACA,IAGA,kBAACE,EAAA,EAAD,CACIC,UAAWT,EAAQH,KACnBE,KAAMA,EACNW,QAAS,kBAAM2L,GAA8B,KAE7C,kBAAC1L,EAAA,EAAD,oGACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,oLAGA,kBAACC,EAAA,EAAD,CACIC,WAAS,EACTC,WAAS,EACTC,MAAM,oGACNC,KAAK,OACLC,MAAO8N,EACP7N,QAAS,SAACC,GAAD,OAAW6N,EAAyB7N,EAAMC,OAAOH,WAGlE,kBAACI,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAM4K,GAA8B,IAAQ3K,MAAM,WAAnE,kCAGA,kBAACF,EAAA,EAAD,CAAQC,QAAS,kBAAM0N,KAAwBzN,MAAM,WAArD,sDCjDhB,IAAMhC,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,OAIK,SAASyP,GAAT,GAAuC,IAARvP,EAAO,EAAPA,KACpCC,EAAUN,KACVO,EAAUC,cAETkM,EAAgChM,qBAAWhB,GAA3CgN,8BACD4C,EAAWF,aAAY,SAAAC,GAAK,OAAIA,EAAMpN,SAASA,SAASqN,YAkB9D,OACI,kBAACxO,EAAA,EAAD,CACIC,UAAWT,EAAQH,KACnBE,KAAMA,EACNW,QAAS,kBAAM0L,GAA8B,KAE7C,kBAACzL,EAAA,EAAD,8FACA,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,gGAKJ,kBAACU,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAQC,QAAS,kBAAM2K,GAA8B,IAAQ1K,MAAM,WAAnE,kCAGA,kBAACF,EAAA,EAAD,CAAQC,QAAS,kBAhCzBI,EACKoF,IAAI,mBAAoB,CACrBC,OAAQ,CACJiE,WAAY6D,KAGnBjN,MAAK,WACF9B,EAAQgC,KAAR,QAEHE,OAAM,oBAGXiK,GAA8B,IAoByB1K,MAAM,WAArD,gDC/CT,IAAM6N,GAAwB,SAACrO,GAClC,OAAQA,GACJ,IdZgB,WcaZ,MAAO,sJACX,IdbmB,cccf,MAAO,gJACX,IddmB,ccef,MAAO,sJACX,IdfiB,YcgBb,MAAO,sJACX,IddmB,ccef,MAAO,+KACX,IdfkB,acgBd,MAAO,+KACX,IdfqB,gBcgBjB,MAAO,yKACX,IdlBqB,gBcmBjB,MAAO,+KACX,IdjBgB,WckBZ,MAAO,gJACX,IdlBmB,ccmBf,MAAO,gJACX,IdnBmB,ccoBf,MAAO,0IACX,IdlBoB,ecmBhB,MAAO,sJACX,IdnBuB,kBcoBnB,MAAO,gJACX,IdpBuB,kBcqBnB,MAAO,gJACX,IdrBuB,kBcsBnB,MAAO,sJACX,QACI,MAAO,yCCdbxB,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFwC,QAAS,OACTC,cAAe,UAGnBkN,YAAa,CACT/M,UAAW7C,EAAM8C,QAAQ,GACzBhB,MAAO9B,EAAMyF,QAAQqG,QAAQnG,OAEjC/C,MAAO,CACHC,UAAW7C,EAAM8C,QAAQ,IAE7B+M,OAAQ,CACJC,UAAW,eACXC,WAAY,OACZC,WAAYhQ,EAAMiQ,YAAYrQ,OAAO,YAAa,CAC9CsQ,SAAUlQ,EAAMiQ,YAAYC,SAASC,YAG7CC,WAAY,CACRN,UAAW,sBAIJ,SAASO,GAAaC,GACjC,IAAMlQ,EAAUN,KACV4E,EAAWmB,cAEXxF,EAAUC,cAJwB,EAMEG,oBAAS,GANX,mBAMjC8P,EANiC,KAMlBC,EANkB,OAOU/P,oBAAS,GAPnB,mBAOjCgQ,EAPiC,KAOdC,EAPc,KASlCpM,EAAW4K,aAAY,SAAAC,GAAK,OAAIA,EAAM1K,MAAMH,YAC5CG,EAAQyK,aAAY,SAAAC,GAAK,OAAIA,EAAM1K,MAAMA,SAEzC7B,EAAQsM,aAAY,SAAAC,GAAK,OAAIA,EAAMpN,SAASA,SAASC,QAErD2O,EAAQzB,aAAY,SAAAC,GAAK,OAAIA,EAAMwB,MAAMA,SACzCC,EAAU1B,aAAY,SAAAC,GAAK,OAAIA,EAAMyB,QAAQA,WAE7CC,EAAiB3B,aAAY,SAAAC,GAAK,OAAIA,EAAMwB,MAAMG,eAClDC,EAAmB7B,aAAY,SAAAC,GAAK,OAAIA,EAAMyB,QAAQI,iBAlBpB,EAoBJvQ,oBAAS,GApBL,mBAoBjC4L,EApBiC,KAoBrB4E,EApBqB,OAqB4BxQ,oBAAS,GArBrC,mBAqBjC0C,EArBiC,KAqBL5C,EArBK,OAsB4BE,oBAAS,GAtBrC,mBAsBjCyQ,EAtBiC,KAsBLzE,EAtBK,OAuB4BhM,oBAAS,GAvBrC,mBAuBjC0Q,EAvBiC,KAuBL3E,EAvBK,KAkDxC,OAbAiD,qBAAU,WNrEa,IAACL,ERZH7D,EckFjB7G,GNtEoB0K,EMsECkB,EAAMc,MAAM9J,OAAO8H,SNtEP,SAAC1K,GACtCA,EAASiH,IAAmB,IAC5B1J,EACKoF,IAAI,gBAAiB,CAClBC,OAAQ,CACJiE,WAAY6D,KAGnBjN,MAAK,SAACC,GAAD,OAAYsC,EAAS,CACvBpD,KTfgB,eSgBhBiD,QAASnC,EAAOE,UAEnBC,OAAM,SAACkC,GACJC,EAASiH,IAAmB,IAExBlH,EAAM4M,SACN3M,EAASF,EAAY,CAAClD,KTtBV,eSsB8BgQ,KAAM7M,EAAM4M,SAASE,UAE/D7M,EAASF,EAAY,CAAClD,KTxBV,wBe6EpBoD,GdnFiB6G,EcmFC+E,EAAMc,MAAM9J,OAAO8H,SdnFL,SAAC1K,GACrCA,EAASG,GAAgB,IACzB5C,EACKoF,IAAI,YAAa,CAClBC,OAAQ,CACJiE,WAAYA,KAEfpJ,MAAK,SAACC,GAAD,OAAYsC,EAAS,CACvBpD,KDfa,YCgBbiD,QAASnC,EAAOE,UAEnBC,OAAM,SAACkC,GACJC,EAASG,GAAgB,IACzBH,EAASF,EAAY,CAAClD,KDpBT,qBe2FjBoD,EZnFkB,SAAC6G,GAAD,OAAgB,SAAC7G,GACvCA,EAAS+C,IAAkB,IAC3BxF,EACKoF,IAAI,wBAAyB,CAC9BC,OAAQ,CACJiE,WAAYA,KAEfpJ,MAAK,SAACC,GAAD,OAAYsC,EAAS,CACvBpD,KHbe,cGcfiD,QAASnC,EAAOE,UAEnBC,OAAM,WACHmC,EAASF,EAAY,CAAClD,KHjBP,iBGkBfoD,EAAS+C,IAAkB,QYsEtB+J,CAAWlB,EAAMc,MAAM9J,OAAO8H,aACxC,CAAC1K,EAAU4L,EAAMc,MAAM9J,OAAO8H,WAEjCK,qBAAU,WACFnL,GflFgB,iBekFJG,EAAMnD,MAAwC,MAAfmD,EAAM6M,OACjD5M,EAASL,GAAY,IACrBhE,EAAQgC,KAAK,wBAElB,CAACiC,EAAUG,IAGV,kBAAC,EAAQb,SAAT,CAAkBrC,MAAO,CACrBgL,WA3BW,WACf0E,GAAe5E,IA2BX9L,gCACAkM,gCACAD,kCAEA,kBAACJ,GAAD,CAAMC,WAAYA,EAAYC,YAAagE,EAAMmB,SAASC,WAC1D,kBAACjD,GAAD,CAAQ7L,MAAOA,EAAO0J,YAAagE,EAAMmB,SAASC,WAClD,kBAACxE,GAAA,EAAD,MAEA,kBAAChN,EAAD,CAAsBC,KAAMgD,IAC5B,kBAAC8L,GAAD,CAAsB9O,KAAM+Q,IAC5B,kBAACxB,GAAD,CAAsBvP,KAAMgR,IAE5B,kBAACzN,EAAA,EAAD,CAAW7C,UAAWT,EAAQH,KAAM0D,SAAS,MACzC,kBAACgH,GAAD,CAASC,iBAAkB0F,EAAMc,MAAM9J,OAAO8H,WAE9C,yBAAKvO,UAAWT,EAAQwC,OACpB,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,YAApB,uEAIA,kBAACkD,EAAA,EAAD,CACIrG,UAAWqF,YAAK9F,EAAQyP,OAAQY,GAAqBrQ,EAAQgQ,YAC7DvO,QAAS,kBAAM6O,GAAsBD,IACrCxM,KAAK,SAEL,kBAAC,KAAD,QAIR,kBAAC8J,GAAA,EAAD,CAAUjK,GAAI2M,EAAmBkB,QAAQ,QACpCZ,GAAoB,kBAACa,EAAA,EAAD,CAAkB/Q,UAAWT,EAAQwP,cAC1D,yBAAK/O,UAAWT,EAAQwQ,UAClBG,GAAoBH,EAAQlI,KAAI,SAACY,GAAD,OAAY,kBAACd,GAAD,CAAQlG,KAAMgH,EAAQV,IAAKU,EAAOlC,UAIxF,yBAAKvG,UAAWT,EAAQwC,OACpB,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,WAAWnD,UAAWT,EAAQwC,OAAlD,8CAIA,kBAACsE,EAAA,EAAD,CACIrG,UAAWqF,YAAK9F,EAAQyP,OAAQU,GAAiBnQ,EAAQgQ,YACzDvO,QAAS,kBAAM2O,GAAkBD,IACjCtM,KAAK,SAEL,kBAAC,KAAD,QAIR,kBAAC8J,GAAA,EAAD,CAAUjK,GAAIyM,EAAeoB,QAAQ,QAChCd,GAAkB,kBAACe,EAAA,EAAD,CAAkB/Q,UAAWT,EAAQwP,eACtDiB,GAAkBF,EAAMjI,KAAI,SAAC4C,GAAD,OAAU,kBAAC1F,EAAD,CAAMtD,KAAMgJ,EAAM1C,IAAK0C,EAAKlE,SAIxE,kBAACyK,EAAA,EAAD,CACIC,aAAc,CAACC,SAAU,SAAUC,WAAY,QAC/CC,iBAAkB,IAClB9R,KAAMmE,EACN4N,QAASvC,GAAsBlL,EAAMnD,MACrCR,QArFM,SAACW,EAAO0Q,GACX,cAAXA,GAIJzN,EAASL,GAAY,S,4CChFvBvE,GAAYC,aAAW,SAACC,GAAD,MAAY,CACrCC,KAAM,CACFwC,QAAS,OACTC,cAAe,SACfC,eAAgB,iBAEpBC,MAAO,CACHC,UAAW7C,EAAM8C,QAAQ,GACzBC,aAAc/C,EAAM8C,QAAQ,IAEhCE,WAAY,GACZC,UAAW,CACPJ,UAAW7C,EAAM8C,QAAQ,QAIlB,SAASsP,KACpB,IAAMhS,EAAUN,KACVO,EAAUC,cAMhB,OACI,yBAAKO,UAAWT,EAAQH,MACpB,kBAACyD,EAAA,EAAD,CAAWC,SAAS,MAEhB,kBAACE,EAAA,EAAD,CAAMC,IAAI,GACN,6BACI,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKnD,UAAWT,EAAQwC,OAA5C,mGAGA,kBAAChB,EAAA,EAAD,CACIf,UAAWT,EAAQ4C,WACnBgB,QAAQ,WACRlC,MAAM,UACNmC,KAAK,QACLC,UAAW,kBAACmO,GAAA,EAAD,MACXxQ,QAAS,WAlB7BxB,EAAQgC,KAAK,OAYG,yGAaZ,yBAAKxB,UAAWT,EAAQ6C,aC/CpC,IAAMjD,GAAQsS,aAAe,CACzB7M,QAAS,CACLqG,QAAS,CACLnG,MAAO,UACPsC,KAAM,WAEVvC,UAAW,CACPC,MAAO,UACPsC,KAAM,cAKH,SAASsK,KAEpB,OACI,kBAACC,GAAA,EAAD,CAAexS,MAAOyS,aAAoBzS,KAClC,yBAAKa,UAAU,OACX,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAO6R,OAAK,EAACC,KAAK,IAAIC,UAAW1P,IACjC,kBAAC,IAAD,CAAOyP,KAAK,sBAAsBC,UAAWvC,KAC7C,kBAAC,IAAD,CAAOsC,KAAK,oBAAoBC,UAAWR,Q,sBCrB7DS,GAAc,CAChBlC,MAAO,GACPG,aAAa,GCAX+B,GAAe,CACjBjC,QAAS,GACTI,eAAe,GCJb6B,GAAe,CACjB9Q,SAAU,CACNqN,SAAU,GACVpN,KAAM,IAEV8Q,iBAAiB,GCXfD,GAAe,CACjBvO,UAAU,EACVG,MAAO,CACHnD,KAAM,KACNgQ,KAAM,OCCCyB,gBAAgB,CAACpC,MJMjB,WAAmC,IAAlCxB,EAAiC,uDAAzB0D,GAAcG,EAAW,uCAC7C,OAAQA,EAAO1R,MACX,IlBfqB,gBkBgBjB,OAAO,2BACA6N,GADP,IAEI2B,YAAakC,EAAOzO,UAE5B,IlBnBgB,WkBoBZ,OAAO,2BACA4K,GADP,IAEIwB,MAAM,CAAEqC,EAAOzO,SAAV,oBAAsB4K,EAAMwB,UAEzC,IlBvBmB,ckBwBf,OAAO,2BACAxB,GADP,IAEIwB,MAAOxB,EAAMwB,MAAMsC,QAAO,SAACC,GAAD,OAAUA,EAAK9L,KAAO4L,EAAOzO,aAE/D,IlB3BmB,ckB4Bf,OAAO,2BACA4K,GADP,IAEIwB,MAAOxB,EAAMwB,MAAMjI,KAAI,SAAC4C,GAAD,OAAUA,EAAKlE,KAAO4L,EAAOzO,QAAQ6C,GAAK4L,EAAOzO,QAAU+G,OAE1F,IlB/BiB,YkBgCb,OAAO,2BACA6D,GADP,IAEIwB,MAAOqC,EAAOzO,QACduM,aAAa,IAErB,QACI,OAAO3B,IInCoByB,QHQxB,WAAmC,IAAlCzB,EAAiC,uDAAzB0D,GAAcG,EAAW,uCAC7C,OAAQA,EAAO1R,MACX,InBXuB,kBmBYnB,OAAO,2BACA6N,GADP,IAEI6B,cAAegC,EAAOzO,UAE9B,InBfmB,cmBgBf,OAAO,2BACA4K,GADP,IAEIyB,QAASoC,EAAOzO,QAChByM,eAAe,IAEvB,InBpBkB,amBqBd,OAAO,2BACA7B,GADP,IAEIyB,QAAQ,CAAEoC,EAAOzO,SAAV,oBAAsB4K,EAAMyB,YAE3C,InBxBqB,gBmByBjB,OAAO,2BACAzB,GADP,IAEIyB,QAASzB,EAAMyB,QAAQlI,KAAI,SAACY,GAAD,OAAYA,EAAOlC,KAAO4L,EAAOzO,QAAQ6C,GAAK4L,EAAOzO,QAAU+E,OAElG,InB5BqB,gBmB6BjB,OAAO,2BACA6F,GADP,IAEIyB,QAASzB,EAAMyB,QAAQqC,QAAO,SAACC,GAAD,OAAUA,EAAK9L,KAAO4L,EAAOzO,aAEnE,InB/BgB,WmBgCZ,IAAI4O,EAAchE,EAAMyB,QAAQwC,WAAU,SAACF,GAAD,OAAUA,EAAK9L,KAAO4L,EAAOzO,QAAQuE,cACzEuK,EAAalE,EAAMyB,QAAQjH,QAGjC,OAFA0J,EAAWF,GAAa1K,MAAM6K,QAAQN,EAAOzO,SAEtC,2BACA4K,GADP,IAEIyB,QAASyC,IAEjB,InBvCmB,cmBwCf,OAAO,2BACAlE,GADP,IAEIyB,QAASzB,EAAMyB,QAAQlI,KAAI,SAACY,GACxB,OAAO,2BACAA,GADP,IAEIb,MAAOa,EAAOb,MAAMC,KAAI,SAACC,GAAD,OAAUA,EAAKvB,KAAO4L,EAAOzO,QAAQ6C,GAAK4L,EAAOzO,QAAUoE,YAInG,InBhDmB,cmBiDf,OAAO,2BACAwG,GADP,IAEIyB,QAASzB,EAAMyB,QAAQlI,KAAI,SAACY,GACxB,OAAO,2BACAA,GADP,IAEIb,MAAOa,EAAOb,MAAMwK,QAAO,SAACC,GAAD,OAAUA,EAAK9L,KAAO4L,EAAOzO,kBAIxE,QACI,OAAO4K,IGlE6BpN,SFSjC,WAAmC,IAAlCoN,EAAiC,uDAAzB0D,GAAcG,EAAW,uCAC7C,OAAQA,EAAO1R,MACX,IpBFwB,mBoBGpB,OAAO,2BACA6N,GADP,IAEI2D,gBAAiBE,EAAOzO,UAEhC,IpBNoB,eoBYpB,IpBXuB,kBoBYnB,OAAO,2BACA4K,GADP,IAEIpN,SAAUiR,EAAOzO,QACjBuO,iBAAiB,IAEzB,IpBfuB,kBoBgBnB,OAAO,2BACA3D,GADP,IAEIpN,SAAU,CACNqN,SAAUD,EAAMpN,SAASqN,SACzBpN,KAAMgR,EAAOzO,WAGzB,QACI,OAAO4K,IErCuC1K,MDG3C,WAAmC,IAAlC0K,EAAiC,uDAAzB0D,GAAcG,EAAW,uCAC7C,OAAQA,EAAO1R,MACX,IrBUoB,eqBThB,OAAO,2BACA6N,GADP,IAEI1K,MAAOuO,EAAOzO,UAEtB,IrBMiB,YqBLb,OAAO,2BACA4K,GADP,IAEI7K,SAAU0O,EAAOzO,UAEzB,QACI,OAAO4K,M,UEnBJoE,gBAAYC,GAAaC,aAAgBC,OCMxDC,IAASC,OACL,kBAAC,IAAD,CAAUC,MAAOA,IACb,kBAAC,IAAD,KACI,kBAACtB,GAAD,QAGRuB,SAASC,eAAe,W","file":"static/js/main.bf2173a5.chunk.js","sourcesContent":["import React from 'react'\n\nconst Context = React.createContext()\n\nexport default Context","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: `https://dumaev.digital/api/v1/`\n})","import React, {useContext, useState} from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport Context from \"../../context\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport API from \"../../api/api\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    }\n}))\n\nexport default function CreateNotebookDialog({open}) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const {setIsOpenCreateNotebookDialog}= useContext(Context)\n\n    const [notebookName, setNotebookName] = useState('')\n\n    const handleCreateNotebook = () => {\n        const notebook = {\n            name: notebookName\n        }\n\n        API\n            .post(\"notebooks/add\", notebook)\n            .then((result) => {\n                history.push(`/notebook/${result.data}`)\n            })\n            .catch(() => {\n            })\n\n        setIsOpenCreateNotebookDialog(false)\n    }\n\n    return (\n        <Dialog\n            className={classes.root}\n            open={open}\n            onClose={() => setIsOpenCreateNotebookDialog(false)}\n        >\n            <DialogTitle>Создать новый блокнот</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Введите название блокнота, который хотите создать\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    label=\"Название блокнота\"\n                    type=\"text\"\n                    value={notebookName}\n                    onInput={(event) => setNotebookName(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setIsOpenCreateNotebookDialog(false)} color=\"primary\">\n                    Назад\n                </Button>\n                <Button onClick={() => handleCreateNotebook()} color=\"primary\">\n                    Создать\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, {useState} from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport {ArrowForward} from \"@material-ui/icons\"\nimport Button from \"@material-ui/core/Button\"\nimport Grow from \"@material-ui/core/Grow\"\nimport CreateNotebookDialog from \"../../DialogCreateNotebook\"\nimport Context from \"../../../context\"\n\nimport Lottie from 'react-lottie'\nimport animationData from '../../../lotties/multitasking.json'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: \"space-between\",\n    },\n    title: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4)\n    },\n    mainButton: {},\n    animation: {\n        marginTop: theme.spacing(8),\n    }\n}))\n\nexport default function HomePage() {\n    const classes = useStyles()\n\n    const [isOpenCreateNotebookDialog, setIsOpenCreateNotebookDialog] = useState(false)\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: animationData,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            <Container maxWidth=\"md\">\n                <Context.Provider value={{setIsOpenCreateNotebookDialog}}>\n\n                    <CreateNotebookDialog open={isOpenCreateNotebookDialog}/>\n\n                    <Grow in={true}>\n                        <div>\n                            <Typography variant=\"h4\" className={classes.title}>\n                                Создавайте блокноты с заметками и задачами.\n                                Делитесь ими, просто отправив ссылку\n                            </Typography>\n                            <Button\n                                className={classes.mainButton}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                size=\"large\"\n                                startIcon={<ArrowForward/>}\n                                onClick={() => setIsOpenCreateNotebookDialog(true)}\n                            >\n                                Создать блокнот\n                            </Button>\n                        </div>\n                    </Grow>\n\n                    <div className={classes.animation}>\n                        <Lottie options={defaultOptions}/>\n                    </div>\n                </Context.Provider>\n            </Container>\n        </div>\n    )\n}","import {CREATE_ERROR, HAS_ERROR} from \"./types\"\n\nexport const setHasError = (hasError) => ({\n    type: HAS_ERROR,\n    payload: hasError\n})\n\nexport const createError = (error) => (dispatch) => {\n    dispatch(setHasError(true))\n\n    dispatch({\n        type: CREATE_ERROR,\n        payload: error\n    })\n}","export const NOTES_LOADING = 'NOTES_LOADING'\nexport const ADD_NOTE = 'ADD_NOTE'\nexport const DELETE_NOTE = 'DELETE_NOTE'\nexport const UPDATE_NOTE = 'UPDATE_NOTE'\nexport const GET_NOTES = 'GET_NOTES'\n\nexport const TASKERS_LOADING = 'TASKERS_LOADING'\nexport const GET_TASKERS = 'GET_TASKERS'\nexport const ADD_TASKER = 'ADD_TASKER'\nexport const UPDATE_TASKER = 'UPDATE_TASKER'\nexport const DELETE_TASKER = 'DELETE_TASKER'\n\nexport const ADD_TASK = 'ADD_TASK'\nexport const UPDATE_TASK = 'UPDATE_TASK'\nexport const DELETE_TASK = 'DELETE_TASK'\n\nexport const NOTEBOOK_LOADING = 'NOTEBOOK_LOADING'\nexport const GET_NOTEBOOK = 'GET_NOTEBOOK'\nexport const CREATE_NOTEBOOK = 'CREATE_NOTEBOOK'\nexport const DELETE_NOTEBOOK = 'DELETE_NOTEBOOK'\nexport const UPDATE_NOTEBOOK = 'UPDATE_NOTEBOOK'\n\nexport const CREATE_ERROR = 'CREATE_ERROR'\nexport const HAS_ERROR = 'HAS_ERROR'","import API from '../api/api'\n\nimport {\n    NOTES_LOADING,\n    ADD_NOTE,\n    DELETE_NOTE,\n    UPDATE_NOTE,\n    GET_NOTES\n} from './types'\nimport {createError} from \"./error\"\n\nexport const getNotes = (notebookId) => (dispatch) => {\n    dispatch(setNotesLoading(true))\n    API\n        .get(\"notes/get\", {\n        params: {\n            notebookId: notebookId,\n        }})\n        .then((result) => dispatch({\n            type: GET_NOTES,\n            payload: result.data\n        }))\n        .catch((error) => {\n            dispatch(setNotesLoading(false))\n            dispatch(createError({type: GET_NOTES}))\n        })\n}\n\nexport const addNote = (note) => (dispatch) => {\n    API\n        .post(\"notes/add\", note)\n        .then((result) => dispatch({\n            type: ADD_NOTE,\n            payload: result.data\n        }))\n        .catch((error) => {\n            dispatch(createError({type: ADD_NOTE}))\n        })\n}\n\nexport const removeNote = (id) => (dispatch) => {\n    API\n        .get(\"notes/delete\", {\n            params: {\n                noteId: id\n            }\n        })\n        .then(() => dispatch({\n            type: DELETE_NOTE,\n            payload: id\n        }))\n        .catch((error) => {\n            dispatch(createError({type: DELETE_NOTE}))\n        })\n}\n\nexport const updateNote = (newNote) => (dispatch) => {\n    API\n        .post(\"notes/update\", newNote)\n        .then(() => dispatch({\n            type: UPDATE_NOTE,\n            payload: newNote\n        }))\n        .catch((error) => {\n            dispatch(createError({type: UPDATE_NOTE}))\n        })\n}\n\nconst setNotesLoading = (isLoading) => ({\n    type: NOTES_LOADING,\n    payload: isLoading\n})\n","import React, {useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport {Close, Star, StarBorder} from \"@material-ui/icons\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport clsx from \"clsx\"\nimport {useDispatch} from \"react-redux\"\n\nimport {updateNote, removeNote} from \"../../actions/notes\"\nimport Fade from \"@material-ui/core/Fade\"\nimport Grow from \"@material-ui/core/Grow\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingBottom: 0,\n    },\n    actions: {\n        paddingTop: 0,\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        display: 'flex',\n        justifyContent: \"space-between\",\n    },\n    title: {\n        marginBottom: theme.spacing(2),\n    },\n    text: {\n        whiteSpace: 'pre-line',\n    },\n    priority: {\n        borderColor: theme.palette.secondary.light,\n    },\n}))\n\nexport default function Note({data}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [expanded, setExpanded] = useState(false)\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n\n    return (\n        <Grow in={true}>\n            <Card\n                className={clsx(classes.root, data.highPriority && classes.priority)}\n                variant=\"outlined\"\n                onMouseOver={() => handleExpandClick()}\n                onMouseOut={() => handleExpandClick()}\n            >\n                <CardContent className={classes.content}>\n                    <Typography variant='h6' className={classes.title}>\n                        {data.title}\n                    </Typography>\n                    <Typography className={classes.text}>\n                        {data.text}\n                    </Typography>\n                </CardContent>\n                <Fade in={expanded}>\n                    <CardActions className={classes.actions}>\n                        <div/>\n                        <div>\n                            <Tooltip title={data.highPriority ? \"Высокий приоритет\" : \"Средний приоритет\"}>\n                                <Checkbox\n                                    checked={data.highPriority}\n                                    size=\"small\"\n                                    icon={<StarBorder/>}\n                                    checkedIcon={<Star/>}\n                                    onChange={() => {\n                                        dispatch(updateNote({...data, highPriority: !data.highPriority}))\n                                    }}\n                                />\n                            </Tooltip>\n                            <Tooltip title={data.done ? \"Выполнено\" : \"Не выполнено\"}>\n                                <Checkbox\n                                    checked={data.done}\n                                    size=\"small\"\n                                    color='primary'\n                                    onChange={() => {\n                                        dispatch(updateNote({...data, done: !data.done}))\n                                    }}\n                                />\n                            </Tooltip>\n                            <Tooltip title=\"Удалить\">\n                                <IconButton aria-label=\"Удалить\" size=\"small\" onClick={() => {\n                                    dispatch(removeNote(data.id))\n                                }}>\n                                    <Close/>\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    </CardActions>\n                </Fade>\n            </Card>\n        </Grow>\n    )\n}","import {\n    TASKERS_LOADING,\n    GET_TASKERS,\n    ADD_TASKER,\n    DELETE_TASKER,\n    ADD_TASK,\n    UPDATE_TASK,\n    DELETE_TASK, UPDATE_TASKER\n} from \"./types\"\nimport API from \"../api/api\"\nimport {createError} from \"./error\"\n\nexport const getTaskers = (notebookId) => (dispatch) => {\n    dispatch(setTaskersLoading(true))\n    API\n        .get(\"tasklists/getFullInfo\", {\n        params: {\n            notebookId: notebookId\n        }})\n        .then((result) => dispatch({\n            type: GET_TASKERS,\n            payload: result.data\n        }))\n        .catch(() => {\n            dispatch(createError({type: GET_TASKERS}))\n            dispatch(setTaskersLoading(false))\n        })\n}\n\nexport const addTasker = (tasker) => (dispatch) => {\n    API\n        .post(\"tasklists/add\", tasker)\n        .then((result) => dispatch({\n            type: ADD_TASKER,\n            payload: result.data\n        }))\n        .catch(() => {\n            dispatch(createError({type: ADD_TASKER}))\n        })\n}\n\nexport const updateTasker = (newTasker) => (dispatch) => {\n    API\n        .post(\"tasklists/update\", newTasker)\n        .then((result) => dispatch({\n            type: UPDATE_TASKER,\n            payload: newTasker\n        }))\n        .catch(() => {\n            dispatch(createError({type: UPDATE_TASKER}))\n        })\n}\n\nexport const removeTasker = (id) => (dispatch) => {\n    API\n        .get(\"/tasklists/delete\", {\n        params: {\n            taskListId: id\n        }})\n        .then(() => dispatch({\n            type: DELETE_TASKER,\n            payload: id\n        }))\n        .catch(() => {\n            dispatch(createError({type: DELETE_TASKER}))\n        })\n}\n\nexport const addTask = (task) => (dispatch) => {\n    API\n        .post(\"tasks/add\", task)\n        .then((result) => dispatch({\n            type: ADD_TASK,\n            payload: result.data\n        }))\n        .catch(() => {\n            dispatch(createError({type: ADD_TASK}))\n        })\n}\n\nexport const updateTask = (newTask) => (dispatch) => {\n    API\n        .post(\"tasks/update\", newTask)\n        .then(() => dispatch({\n            type: UPDATE_TASK,\n            payload: newTask\n        }))\n        .catch(() => {\n            dispatch(createError({type: UPDATE_TASK}))\n        })\n}\n\nexport const removeTask = (id) => (dispatch) => {\n    API\n        .get(\"tasks/delete\", {\n        params: {\n            taskId: id\n        }})\n        .then(() => dispatch({\n            type: DELETE_TASK,\n            payload: id\n        }))\n        .catch(() => {\n            dispatch(createError({type: DELETE_TASK}))\n        })\n}\n\nconst setTaskersLoading = (isLoading) => ({\n    type: TASKERS_LOADING,\n    payload: isLoading\n})","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Typography from \"@material-ui/core/Typography\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport {CheckCircle, CheckCircleOutline, HighlightOff} from \"@material-ui/icons\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {useDispatch} from \"react-redux\"\nimport {removeTask, updateTask} from \"../../actions/taskers\"\nimport clsx from \"clsx\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        alignItems: 'center',\n    },\n    text: {\n        whiteSpace: 'pre-line',\n    },\n    textDone: {\n        textDecoration: 'line-through',\n    },\n    doneCheckBox: {\n        padding: theme.spacing(0.5),\n        marginRight: theme.spacing(1),\n    },\n    deleteButton: {\n        padding: theme.spacing(0.5),\n        marginRight: theme.spacing(1),\n        color: theme.palette.secondary.main\n    }\n}))\n\nexport default function Task({data}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    return (\n        <div className={classes.root}>\n            <Checkbox\n                className={classes.doneCheckBox}\n                checked={data.done}\n                color='primary'\n                icon={<CheckCircleOutline/>}\n                checkedIcon={<CheckCircle/>}\n                onChange={() => {\n                    dispatch(updateTask({...data, done: !data.done}))\n                }}\n            />\n\n            <IconButton\n                className={classes.deleteButton}\n                aria-label=\"Удалить\"\n                onClick={() => dispatch(removeTask(data.id))}\n            >\n                <HighlightOff/>\n            </IconButton>\n\n            <Typography className={clsx(classes.text, data.done && classes.textDone)}>\n                {data.text}\n            </Typography>\n\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Task from \"../Task\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport {Close, Star, StarBorder} from \"@material-ui/icons\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {useDispatch} from \"react-redux\"\nimport {removeTasker, updateTasker} from \"../../actions/taskers\"\nimport Fade from \"@material-ui/core/Fade\"\nimport Grow from \"@material-ui/core/Grow\"\nimport clsx from \"clsx\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(1),\n    },\n    title: {\n        marginBottom: theme.spacing(2),\n    },\n    content: {\n        paddingBottom: 0,\n    },\n    actions: {\n        paddingTop: 0,\n        paddingRight: theme.spacing(2),\n        display: 'flex',\n        justifyContent: \"space-between\",\n    },\n    priority: {\n        borderColor: theme.palette.secondary.light,\n    },\n}))\n\nexport default function Tasker({data}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [expanded, setExpanded] = useState(false)\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n    return (\n        <Grow in={true}>\n            <Card\n                className={clsx(classes.root, data.highPriority && classes.priority)}\n                variant=\"outlined\"\n                onMouseOver={() => handleExpandClick()}\n                onMouseOut={() => handleExpandClick()}\n            >\n                <CardContent className={classes.content}>\n                    <Typography variant='h6' className={classes.title}>\n                        {data.title}\n                    </Typography>\n\n                    {data.tasks.map((task) => <Task data={task} key={task.id}/>)}\n                </CardContent>\n\n                <Fade in={expanded}>\n                    <CardActions className={classes.actions}>\n                        <div/>\n                        <div>\n                            <Tooltip title={data.highPriority ? \"Высокий приоритет\" : \"Средний приоритет\"}>\n                                <Checkbox\n                                    checked={data.highPriority}\n                                    size='small'\n                                    icon={<StarBorder/>}\n                                    checkedIcon={<Star/>}\n                                    onChange={() => {\n                                        dispatch(updateTasker({...data, highPriority: !data.highPriority}))\n                                    }}\n                                />\n                            </Tooltip>\n                            <Tooltip title=\"Удалить\">\n                                <IconButton aria-label=\"Удалить\" size='small'\n                                            onClick={() => dispatch(removeTasker(data.id))}>\n                                    <Close/>\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    </CardActions>\n                </Fade>\n            </Card>\n        </Grow>\n    )\n}","import React, {useContext} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport InputBase from \"@material-ui/core/InputBase\"\nimport Context from \"../../context\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(2),\n    },\n}))\n\nexport default function NoteBuilder({text}) {\n    const classes = useStyles()\n\n    const {setText} = useContext(Context)\n\n    return (\n        <InputBase\n            className={classes.root}\n            placeholder=\"Текст заметки\"\n            fullWidth={true}\n            value={text}\n            multiline\n            onInput={(event) => setText(event.target.value)}\n        />\n    )\n}","import React, {useContext} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport InputBase from \"@material-ui/core/InputBase\"\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {Add, CheckCircle, CheckCircleOutline, HighlightOff} from \"@material-ui/icons\"\nimport Context from \"../../context\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    task: {\n        display: \"flex\",\n        alignItems: 'center',\n        width: '100%',\n    },\n    text: {\n    },\n    doneCheckBox: {\n        padding: theme.spacing(0.5),\n        marginRight: theme.spacing(1),\n    },\n    deleteButton: {\n        padding: theme.spacing(0.5),\n        marginRight: theme.spacing(1),\n        color: theme.palette.secondary.main\n    },\n}))\n\nexport default function TaskerBuilder({tasker}) {\n    const classes = useStyles()\n\n    const {setTasker} = useContext(Context)\n\n    const updateTask = (index, newTask) => {\n        const newTaskListsData = tasker.slice()\n        newTaskListsData[index] = newTask\n\n        setTasker(newTaskListsData)\n    }\n\n    const deleteTask = (index) => {\n        const newTaskListsData = tasker.slice()\n        newTaskListsData.splice(index, 1)\n        setTasker(newTaskListsData)\n    }\n\n    const addNewTask = () => {\n        const newTaskListsData = tasker.slice()\n        newTaskListsData.push({\n            done: false,\n            text: \"\"\n        })\n        setTasker(newTaskListsData)\n    }\n\n    const handleKeyDown = (event, taskIndex) => {\n        switch (event.key) {\n            case 'Enter':\n                addNewTask()\n                break\n            case 'Backspace':\n                if (tasker.length !== 1 && tasker[taskIndex].text === '') {\n                    deleteTask(taskIndex)\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            {tasker.map((task, index) =>\n                <div className={classes.task} key={index}>\n                    <Checkbox\n                        className={classes.doneCheckBox}\n                        checked={task.done}\n                        color='primary'\n                        icon={<CheckCircleOutline/>}\n                        checkedIcon={<CheckCircle/>}\n                        onChange={() => {\n                            updateTask(index, {...task, done: !task.done})\n                        }}\n                    />\n\n                    {tasker.length !== 1 && <Tooltip title=\"Удалить\">\n                        <IconButton\n                            className={classes.deleteButton}\n                            aria-label=\"Удалить\"\n                            size='small'\n                            onClick={() => deleteTask(index)}\n                        >\n                            <HighlightOff/>\n                        </IconButton>\n                    </Tooltip>}\n\n                    <InputBase\n                        className={classes.text}\n                        placeholder=\"Текст задачи\"\n                        fullWidth={true}\n                        value={task.text}\n                        autoFocus={true}\n                        multiline={false}\n                        onInput={(event) => updateTask(index, {...task, text: event.target.value})}\n                        onKeyDown={(event) => handleKeyDown(event, index)}\n                    />\n                </div>\n            )}\n\n            <IconButton\n                color=\"primary\"\n                aria-label=\"Добавить задачу\"\n                onClick={() => addNewTask()}\n            >\n                <Add/>\n            </IconButton>\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport IconButton from '@material-ui/core/IconButton'\nimport Context from \"../../context\"\nimport Card from \"@material-ui/core/Card\"\nimport clsx from \"clsx\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport InputBase from \"@material-ui/core/InputBase\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport {Add, Assignment, AssignmentTurnedIn, Star, StarBorder} from \"@material-ui/icons\"\nimport Button from \"@material-ui/core/Button\"\nimport NoteBuilder from \"../NoteBuilder\"\nimport TaskerBuilder from \"../TaskerBuilder\"\n\nimport {addNote} from '../../actions/notes'\nimport {useDispatch} from \"react-redux\"\nimport {addTasker} from \"../../actions/taskers\"\nimport Grow from \"@material-ui/core/Grow\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    inputTitle: {\n        height: theme.typography.h6.fontSize,\n        fontSize: theme.typography.h6.fontSize,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    actions: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    priority: {\n        borderColor: theme.palette.secondary.light,\n    },\n    tools: {},\n}))\n\nexport default function Builder({notebookStringId}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [isTasker, setIsTasker] = useState(false)\n    const [title, setTitle] = useState('')\n\n    const [noteData, setNoteData] = useState('')\n    const [taskerData, setTaskerData] = useState([{\n        done: false,\n        text: \"\"\n    }])\n\n    const [highPriority, setHighPriority] = useState(false)\n\n    const handleAddButton = () => {\n        if (isTasker) {\n            dispatch(addTasker({\n                notebookId: notebookStringId,\n                title: title,\n                tasks: taskerData,\n                highPriority: highPriority\n            }))\n\n            setTitle('')\n            setTaskerData([{\n                done: false,\n                text: \"\"\n            }])\n        } else {\n            dispatch(addNote({\n                done: false,\n                notebookId: notebookStringId,\n                text: noteData,\n                title: title,\n                highPriority: highPriority\n            }))\n\n            setTitle('')\n            setNoteData('')\n            setHighPriority(false)\n        }\n    }\n\n    return (\n        <Grow in={true}>\n            <Card className={clsx(classes.root, highPriority && classes.priority)} variant='outlined'>\n                <CardContent>\n                    <InputBase\n                        className={classes.inputTitle}\n                        placeholder=\"Заголовок\"\n                        fullWidth={true}\n                        value={title}\n                        multiline\n                        onInput={(event) => setTitle(event.target.value)}\n                    />\n                    <Context.Provider value={{setText: setNoteData, setTasker: setTaskerData}}>\n                        {isTasker ? <TaskerBuilder tasker={taskerData}/> : <NoteBuilder text={noteData}/>}\n                    </Context.Provider>\n                </CardContent>\n                <CardActions className={classes.actions}>\n                    <div className={classes.tools}>\n                        <Tooltip title={highPriority ? \"Высокий приоритет\" : \"Средний приоритет\"}>\n                            <Checkbox\n                                checked={highPriority}\n                                icon={<StarBorder/>}\n                                checkedIcon={<Star/>}\n                                onChange={() => {\n                                    setHighPriority(!highPriority)\n                                }}\n                            />\n                        </Tooltip>\n                        <Tooltip title={isTasker ? \"Список задач\" : \"Заметка\"}>\n                            <IconButton\n                                aria-label={isTasker ? \"Список задач\" : \"Заметка\"}\n                                onClick={() => setIsTasker(!isTasker)}\n                            >\n                                {isTasker ? <AssignmentTurnedIn/> : <Assignment/>}\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <Button\n                        variant='outlined'\n                        color={highPriority ? \"secondary\" : \"primary\"}\n                        startIcon={<Add/>}\n                        disableElevation\n                        onClick={() => handleAddButton()}\n                    >\n                        Добавить\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grow>\n    )\n}","import {\n    NOTEBOOK_LOADING,\n    CREATE_NOTEBOOK,\n    DELETE_NOTEBOOK,\n    UPDATE_NOTEBOOK,\n    GET_NOTEBOOK\n} from './types'\nimport API from \"../api/api\"\nimport {createError} from \"./error\"\n\n// export const createNotebook = (notebook) => (dispatch) => {\n//     dispatch(setNotebookLoading(true))\n//     API\n//         .get(\"notebooks/add\", notebook)\n//         .then((result) => dispatch({\n//             type: CREATE_NOTEBOOK,\n//             payload: result.data\n//         }))\n//         .catch((error) => {\n//             dispatch(setNotebookLoading(false))\n//         })\n// }\n\nexport const getNotebook = (stringId) => (dispatch) => {\n    dispatch(setNotebookLoading(true))\n    API\n        .get('notebooks/get', {\n            params: {\n                notebookId: stringId\n            }\n        })\n        .then((result) => dispatch({\n            type: GET_NOTEBOOK,\n            payload: result.data\n        }))\n        .catch((error) => {\n            dispatch(setNotebookLoading(false))\n\n            if (error.response){\n                dispatch(createError({type: GET_NOTEBOOK, code: error.response.status}))\n            } else {\n                dispatch(createError({type: GET_NOTEBOOK}))\n            }\n\n        })\n}\n\nexport const updateNotebookName = (stringId, name) => (dispatch) => {\n    API\n        .get('notebooks/update', {\n            params: {\n                notebookId: stringId,\n                name: name\n            }\n        })\n        .then((result) => dispatch({\n            type: UPDATE_NOTEBOOK,\n            payload: name\n        }))\n        .catch((error) => {\n            dispatch(createError({type: UPDATE_NOTEBOOK}))\n        })\n}\n\n// export const deleteNotebook = (stringId) => (dispatch) => {\n//\n// }\n\nconst setNotebookLoading = (isLoading) => ({\n    type: NOTEBOOK_LOADING,\n    payload: isLoading\n})","import React, {useContext, useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport {\n    BookOutlined, DeleteOutline, EditOutlined,\n    ExpandLess,\n    ExpandMore, FilterListOutlined,\n    LocalOfferOutlined, ShareOutlined\n} from \"@material-ui/icons\"\nimport Context from \"../../context\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Chip from \"@material-ui/core/Chip\"\nimport {NavLink} from \"react-router-dom\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport {Hidden} from \"@material-ui/core\"\nimport copy from \"copy-to-clipboard\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    title: {\n        padding: theme.spacing(1)\n    },\n    list: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: 260,\n        padding: 0\n    },\n    itemIconNotebook: {\n        color: theme.palette.primary.light\n    },\n    itemIconTag: {\n        color: theme.palette.primary.light\n    },\n    itemIconChange: {\n        color: theme.palette.primary.light\n    },\n    itemIconDelete: {\n        color: theme.palette.secondary.main\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    link: {\n        textDecoration: \"none\",\n        color: 'inherit',\n    }\n}))\n\nexport default function Menu({isOpenMenu, notebookUrl}) {\n    const classes = useStyles()\n    const {toggleMenu} = useContext(Context)\n    const {\n        setIsOpenCreateNotebookDialog,\n        setIsOpenDeleteNotebookDialog,\n        setIsOpenUpdateNotebookDialog} = useContext(Context)\n\n    const [isOpenTags, setIsOpenTags] = useState(false)\n\n    return (\n        <Drawer className={classes.root} transitionDuration={150} open={isOpenMenu} onClose={() => toggleMenu()}>\n            <NavLink to={'/'} activeClassName={classes.link}>\n                <ListItem button>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Shared notes\n                    </Typography>\n                </ListItem>\n            </NavLink>\n            <Divider/>\n            <List className={classes.list} subheader={<ListSubheader>Общие настройки</ListSubheader>}>\n                <ListItem button onClick={() => {\n                    setIsOpenCreateNotebookDialog(true)\n                    toggleMenu()\n                }}>\n                    <ListItemIcon className={classes.itemIconNotebook}><BookOutlined/></ListItemIcon>\n                    <ListItemText primary='Создать блокнот'/>\n                </ListItem>\n            </List>\n            <List className={classes.list} subheader={<ListSubheader>Настройки текущего блокнота</ListSubheader>}>\n                <Hidden smUp>\n                    <ListItem button onClick={() => copy('dumaevrinat.github.io/#' + notebookUrl)}>\n                        <ListItemIcon className={classes.itemIconTag}><ShareOutlined/></ListItemIcon>\n                        <ListItemText primary=\"Скопировать ссылку\"/>\n                    </ListItem>\n                </Hidden>\n                <ListItem button onClick={() => setIsOpenTags(!isOpenTags)}>\n                    <ListItemIcon className={classes.itemIconTag}><LocalOfferOutlined/></ListItemIcon>\n                    <ListItemText primary=\"Ярлыки\"/>\n                    {isOpenTags ? <ExpandLess/> : <ExpandMore/>}\n                </ListItem>\n                <Collapse in={isOpenTags}>\n                    <List disablePadding>\n                        <ListItem className={classes.nested}>\n                            <Chip\n                                icon={<FilterListOutlined/>}\n                                clickable\n                                label='Test tag'\n                            />\n                        </ListItem>\n                    </List>\n                </Collapse>\n                <ListItem button onClick={() => setIsOpenUpdateNotebookDialog(true)}>\n                    <ListItemIcon className={classes.itemIconChange}><EditOutlined/></ListItemIcon>\n                    <ListItemText primary=\"Изменить блокнот\"/>\n                </ListItem>\n                <ListItem button onClick={() => setIsOpenDeleteNotebookDialog(true) }>\n                    <ListItemIcon className={classes.itemIconDelete}><DeleteOutline/></ListItemIcon>\n                    <ListItemText primary=\"Удалить блокнот\"/>\n                </ListItem>\n            </List>\n        </Drawer>\n    )\n}","import React, {useContext} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Context from \"../../context\"\nimport {EditOutlined, Share} from \"@material-ui/icons\"\nimport Button from \"@material-ui/core/Button\"\nimport copy from \"copy-to-clipboard\"\nimport Hidden from \"@material-ui/core/Hidden\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        color: 'inherit'\n    },\n    title: {\n        marginRight: theme.spacing(2)\n    },\n    editButton: {\n        color: 'inherit',\n        marginRight: theme.spacing(2)\n    }\n}))\n\nexport default function Header({title, notebookUrl}) {\n    const classes = useStyles()\n\n    const {toggleMenu, setIsOpenUpdateNotebookDialog} = useContext(Context)\n\n    return (\n        <div className={classes.root}>\n            <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n                <Toolbar>\n                    <IconButton edge=\"start\" className={classes.menuButton} onClick={() => toggleMenu()}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {title}\n                    </Typography>\n                    {title &&\n                        <Hidden xsDown>\n                            <IconButton\n                                edge=\"start\"\n                                className={classes.editButton}\n                                onClick={() => setIsOpenUpdateNotebookDialog(true)}\n                            >\n                                <EditOutlined/>\n                            </IconButton>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                size='small'\n                                startIcon={<Share/>}\n                                disableElevation\n                                onClick={() => copy('dumaevrinat.github.io/#' + notebookUrl)}\n                            >\n                                Скопировать ссылку\n                            </Button>\n                        </Hidden>\n                    }\n                </Toolbar>\n            </AppBar>\n        </div>\n    )\n}","import {makeStyles} from \"@material-ui/core/styles\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport TextField from \"@material-ui/core/TextField\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport React, {useContext, useEffect, useState} from \"react\"\nimport Context from \"../../context\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {updateNotebookName} from \"../../actions/notebook\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    }\n}))\n\nexport default function UpdateNotebookDialog({open}) {\n    const classes = useStyles()\n\n    const dispatch = useDispatch()\n\n    const {setIsOpenUpdateNotebookDialog}= useContext(Context)\n    const notebookName = useSelector(state => state.notebook.notebook.name)\n    const stringId = useSelector(state => state.notebook.notebook.stringId)\n\n    const [notebookNameTextField, setNotebookNameTextField] = useState(notebookName)\n\n    const handleUpdateNotebook = () => {\n        dispatch(updateNotebookName(stringId, notebookNameTextField))\n        setIsOpenUpdateNotebookDialog(false)\n    }\n\n    useEffect(() => {\n        setNotebookNameTextField(notebookName)\n    }, [notebookName])\n\n    return (\n        <Dialog\n            className={classes.root}\n            open={open}\n            onClose={() => setIsOpenUpdateNotebookDialog(false)}\n        >\n            <DialogTitle>Изменить блокнот</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Введите новое название блокнота\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    label=\"Название блокнота\"\n                    type=\"text\"\n                    value={notebookNameTextField}\n                    onInput={(event) => setNotebookNameTextField(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setIsOpenUpdateNotebookDialog(false)} color=\"primary\">\n                    Назад\n                </Button>\n                <Button onClick={() => handleUpdateNotebook()} color=\"primary\">\n                    Изменить\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n\n}","import {makeStyles} from \"@material-ui/core/styles\"\nimport {useHistory} from \"react-router-dom\"\nimport React, {useContext} from \"react\"\nimport Context from \"../../context\"\nimport API from \"../../api/api\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport {useSelector} from \"react-redux\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    }\n}))\n\nexport default function DeleteNotebookDialog({open}) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const {setIsOpenDeleteNotebookDialog}= useContext(Context)\n    const stringId = useSelector(state => state.notebook.notebook.stringId)\n\n    const handleDeleteNotebook = () => {\n        API\n            .get(\"notebooks/delete\", {\n                params: {\n                    notebookId: stringId\n                }\n            })\n            .then(() => {\n                history.push(`/`)\n            })\n            .catch(() => {\n            })\n\n        setIsOpenDeleteNotebookDialog(false)\n    }\n\n    return (\n        <Dialog\n            className={classes.root}\n            open={open}\n            onClose={() => setIsOpenDeleteNotebookDialog(false)}\n        >\n            <DialogTitle>Удалить блокнот</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Удалить блокнот?\n                </DialogContentText>\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setIsOpenDeleteNotebookDialog(false)} color=\"primary\">\n                    Назад\n                </Button>\n                <Button onClick={() => handleDeleteNotebook()} color=\"primary\">\n                    Удалить\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import {\n    ADD_NOTE,\n    ADD_TASK,\n    ADD_TASKER, CREATE_NOTEBOOK,\n    DELETE_NOTE, DELETE_NOTEBOOK, DELETE_TASK,\n    DELETE_TASKER, GET_NOTEBOOK,\n    GET_NOTES,\n    GET_TASKERS,\n    UPDATE_NOTE, UPDATE_NOTEBOOK, UPDATE_TASK, UPDATE_TASKER\n} from \"../actions/types\"\n\nexport const getErrorMessageByType = (type) => {\n    switch (type) {\n        case ADD_NOTE:\n            return 'Не удалось добавить заметку'\n        case DELETE_NOTE:\n            return 'Не удалось удалить заметку'\n        case UPDATE_NOTE:\n            return 'Не удалось обновить заметку'\n        case GET_NOTES:\n            return 'Не удалось получить заметки'\n        case GET_TASKERS:\n            return 'Не удалось получить списки задач'\n        case ADD_TASKER:\n            return 'Не удалось добавить список задач'\n        case DELETE_TASKER:\n            return 'Не удалось удалить список задач'\n        case UPDATE_TASKER:\n            return 'Не удалось обновить список задач'\n        case ADD_TASK:\n            return 'Не удалось добавить задачу'\n        case UPDATE_TASK:\n            return 'Не удалось обновить задачу'\n        case DELETE_TASK:\n            return 'Не удалось удалить задачу'\n        case GET_NOTEBOOK:\n            return 'Не удалось получить блокнот'\n        case CREATE_NOTEBOOK:\n            return 'Не удалось создать блокнот'\n        case DELETE_NOTEBOOK:\n            return 'Не удалось удалить блокнот'\n        case UPDATE_NOTEBOOK:\n            return 'Не удалось обновить блокнот'\n        default:\n            return 'Ошибка'\n\n    }\n}\n","import React, {useState, useEffect} from \"react\"\nimport Container from '@material-ui/core/Container'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Note from \"../../Note\"\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Context from \"../../../context\"\nimport Tasker from \"../../Tasker\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport clsx from \"clsx\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Builder from \"../../Builder\"\n\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {getNotes} from '../../../actions/notes'\nimport {getTaskers} from \"../../../actions/taskers\"\nimport {getNotebook} from \"../../../actions/notebook\"\nimport Menu from \"../../Menu\"\nimport Header from \"../../Header\"\nimport CreateNotebookDialog from \"../../DialogCreateNotebook\"\nimport {setHasError} from \"../../../actions/error\"\nimport UpdateNotebookDialog from \"../../DialogUpdateNotebook\"\nimport Divider from \"@material-ui/core/Divider\"\nimport DeleteNotebookDialog from \"../../DialogDeleteNotebook\"\nimport {getErrorMessageByType} from \"../../../utils/getErrorMessage\"\nimport {GET_NOTEBOOK} from \"../../../actions/types\"\nimport {useHistory} from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n\n    },\n    progressBar: {\n        marginTop: theme.spacing(2),\n        color: theme.palette.primary.light,\n    },\n    title: {\n        marginTop: theme.spacing(1),\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    }\n}))\n\nexport default function NotebookPage(props) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n\n    const [expandedNotes, setExpandedNotes] = useState(true)\n    const [expandedTaskLists, setExpandedTaskLists] = useState(true)\n\n    const hasError = useSelector(state => state.error.hasError)\n    const error = useSelector(state => state.error.error)\n\n    const title = useSelector(state => state.notebook.notebook.name)\n\n    const notes = useSelector(state => state.notes.notes)\n    const taskers = useSelector(state => state.taskers.taskers)\n\n    const isLoadingNotes = useSelector(state => state.notes.noteLoading)\n    const isLoadingTaskers = useSelector(state => state.taskers.taskerLoading)\n\n    const [isOpenMenu, setIsOpenMenu] = useState(false)\n    const [isOpenCreateNotebookDialog, setIsOpenCreateNotebookDialog] = useState(false)\n    const [isOpenUpdateNotebookDialog, setIsOpenUpdateNotebookDialog] = useState(false)\n    const [isOpenDeleteNotebookDialog, setIsOpenDeleteNotebookDialog] = useState(false)\n\n    const toggleMenu = () => {\n        setIsOpenMenu(!isOpenMenu)\n    }\n\n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n\n        dispatch(setHasError(false))\n    }\n\n    useEffect(() => {\n        dispatch(getNotebook(props.match.params.stringId))\n        dispatch(getNotes(props.match.params.stringId))\n        dispatch(getTaskers(props.match.params.stringId))\n    }, [dispatch, props.match.params.stringId])\n\n    useEffect(() => {\n        if (hasError && error.type === GET_NOTEBOOK && error.code === 400) {\n            dispatch(setHasError(false))\n            history.push('/notebooknotfound')\n        }\n    }, [hasError, error])\n\n    return (\n        <Context.Provider value={{\n            toggleMenu,\n            setIsOpenCreateNotebookDialog,\n            setIsOpenUpdateNotebookDialog,\n            setIsOpenDeleteNotebookDialog\n        }}>\n            <Menu isOpenMenu={isOpenMenu} notebookUrl={props.location.pathname}/>\n            <Header title={title} notebookUrl={props.location.pathname}/>\n            <Divider/>\n\n            <CreateNotebookDialog open={isOpenCreateNotebookDialog}/>\n            <UpdateNotebookDialog open={isOpenUpdateNotebookDialog}/>\n            <DeleteNotebookDialog open={isOpenDeleteNotebookDialog}/>\n\n            <Container className={classes.root} maxWidth=\"md\">\n                <Builder notebookStringId={props.match.params.stringId}/>\n\n                <div className={classes.title}>\n                    <Typography variant='overline'>\n                        Списки задач\n                    </Typography>\n\n                    <IconButton\n                        className={clsx(classes.expand, expandedTaskLists && classes.expandOpen)}\n                        onClick={() => setExpandedTaskLists(!expandedTaskLists)}\n                        size='small'\n                    >\n                        <ExpandMoreIcon/>\n                    </IconButton>\n                </div>\n\n                <Collapse in={expandedTaskLists} timeout=\"auto\">\n                    {isLoadingTaskers && <CircularProgress className={classes.progressBar}/>}\n                    <div className={classes.taskers}>\n                        {!isLoadingTaskers && taskers.map((tasker) => <Tasker data={tasker} key={tasker.id}/>)}\n                    </div>\n                </Collapse>\n\n                <div className={classes.title}>\n                    <Typography variant='overline' className={classes.title}>\n                        Заметки\n                    </Typography>\n\n                    <IconButton\n                        className={clsx(classes.expand, expandedNotes && classes.expandOpen)}\n                        onClick={() => setExpandedNotes(!expandedNotes)}\n                        size='small'\n                    >\n                        <ExpandMoreIcon/>\n                    </IconButton>\n                </div>\n\n                <Collapse in={expandedNotes} timeout=\"auto\">\n                    {isLoadingNotes && <CircularProgress className={classes.progressBar}/>}\n                    {!isLoadingNotes && notes.map((note) => <Note data={note} key={note.id}/>)}\n\n                </Collapse>\n\n                <Snackbar\n                    anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                    autoHideDuration={2000}\n                    open={hasError}\n                    message={getErrorMessageByType(error.type)}\n                    onClose={closeSnackbar}\n                />\n            </Container>\n        </Context.Provider>\n    )\n}","import {makeStyles} from \"@material-ui/core/styles\"\nimport React from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport Grow from \"@material-ui/core/Grow\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport {HomeOutlined} from \"@material-ui/icons\"\nimport {useHistory} from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: \"space-between\",\n    },\n    title: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4)\n    },\n    mainButton: {},\n    animation: {\n        marginTop: theme.spacing(8),\n    }\n}))\n\nexport default function NotebookNotFoundPage() {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const handleGoHome = () => {\n        history.push('/')\n    }\n\n    return (\n        <div className={classes.root}>\n            <Container maxWidth=\"md\">\n\n                <Grow in={true}>\n                    <div>\n                        <Typography variant=\"h4\" className={classes.title}>\n                            Блокнот не найден :(\n                        </Typography>\n                        <Button\n                            className={classes.mainButton}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            size=\"large\"\n                            startIcon={<HomeOutlined/>}\n                            onClick={() => handleGoHome()}\n                        >\n                            Перейти на главную\n                        </Button>\n                    </div>\n                </Grow>\n            </Container>\n            <div className={classes.animation}></div>\n        </div>\n    )\n}","import React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport HomePage from \"../Pages/HomePage\"\nimport NotebookPage from \"../Pages/NotebookPage\"\nimport {createMuiTheme, responsiveFontSizes} from \"@material-ui/core\"\nimport {ThemeProvider} from \"@material-ui/styles\"\nimport NotebookNotFoundPage from \"../Pages/NotebookNotFoundPage\"\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#9778ce',\n            main: '#7e57c2',\n        },\n        secondary: {\n            light: '#ff8a80',\n            main: '#ff8a80',\n        },\n    },\n})\n\nexport default function App() {\n\n    return (\n        <ThemeProvider theme={responsiveFontSizes(theme)}>\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path='/' component={HomePage}/>\n                        <Route path='/notebook/:stringId' component={NotebookPage}/>\n                        <Route path='/notebooknotfound' component={NotebookNotFoundPage}/>\n                    </Switch>\n                </div>\n        </ThemeProvider>\n    )\n}\n","import {\n    NOTES_LOADING,\n    ADD_NOTE,\n    DELETE_NOTE,\n    UPDATE_NOTE,\n    GET_NOTES\n} from '../actions/types'\n\nconst initialState ={\n    notes: [],\n    noteLoading: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case NOTES_LOADING:\n            return {\n                ...state,\n                noteLoading: action.payload\n            }\n        case ADD_NOTE:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n        case DELETE_NOTE:\n            return {\n                ...state,\n                notes: state.notes.filter((item) => item.id !== action.payload)\n            }\n        case UPDATE_NOTE:\n            return {\n                ...state,\n                notes: state.notes.map((note) => note.id === action.payload.id ? action.payload : note)\n            }\n        case GET_NOTES:\n            return {\n                ...state,\n                notes: action.payload,\n                noteLoading: false\n            }\n        default:\n            return state\n\n    }\n}","import {\n    TASKERS_LOADING,\n    GET_TASKERS,\n    ADD_TASKER,\n    DELETE_TASKER,\n    ADD_TASK,\n    UPDATE_TASK,\n    DELETE_TASK, UPDATE_TASKER\n} from \"../actions/types\"\n\nconst initialState = {\n    taskers: [],\n    taskerLoading: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case TASKERS_LOADING:\n            return {\n                ...state,\n                taskerLoading: action.payload\n            }\n        case GET_TASKERS:\n            return {\n                ...state,\n                taskers: action.payload,\n                taskerLoading: false\n            }\n        case ADD_TASKER:\n            return {\n                ...state,\n                taskers: [action.payload, ...state.taskers]\n            }\n        case UPDATE_TASKER:\n            return {\n                ...state,\n                taskers: state.taskers.map((tasker) => tasker.id === action.payload.id ? action.payload : tasker)\n            }\n        case DELETE_TASKER:\n            return {\n                ...state,\n                taskers: state.taskers.filter((item) => item.id !== action.payload)\n            }\n        case ADD_TASK:\n            let taskerIndex = state.taskers.findIndex((item) => item.id === action.payload.taskListId)\n            const newTaskers = state.taskers.slice()\n            newTaskers[taskerIndex].tasks.unshift(action.payload)\n\n            return {\n                ...state,\n                taskers: newTaskers\n            }\n        case UPDATE_TASK:\n            return {\n                ...state,\n                taskers: state.taskers.map((tasker) => {\n                    return {\n                        ...tasker,\n                        tasks: tasker.tasks.map((task) => task.id === action.payload.id ? action.payload : task)\n                    }\n                })\n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                taskers: state.taskers.map((tasker) => {\n                    return {\n                        ...tasker,\n                        tasks: tasker.tasks.filter((item) => item.id !== action.payload)\n                    }\n                })\n            }\n        default:\n            return state\n    }\n}","import {\n    NOTEBOOK_LOADING,\n    CREATE_NOTEBOOK,\n    DELETE_NOTEBOOK,\n    UPDATE_NOTEBOOK,\n    GET_NOTEBOOK\n} from \"../actions/types\"\n\nconst initialState = {\n    notebook: {\n        stringId: '',\n        name: ''\n    },\n    notebookLoading: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case NOTEBOOK_LOADING:\n            return {\n                ...state,\n                notebookLoading: action.payload\n            }\n        case GET_NOTEBOOK:\n            return {\n                ...state,\n                notebook: action.payload,\n                notebookLoading: false\n            }\n        case CREATE_NOTEBOOK:\n            return {\n                ...state,\n                notebook: action.payload,\n                notebookLoading: false\n            }\n        case UPDATE_NOTEBOOK:\n            return {\n                ...state,\n                notebook: {\n                    stringId: state.notebook.stringId,\n                    name: action.payload\n                }\n            }\n        default:\n            return state\n    }\n}","import {CREATE_ERROR, HAS_ERROR} from \"../actions/types\"\n\nconst initialState = {\n    hasError: false,\n    error: {\n        type: null,\n        code: null\n    }\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case HAS_ERROR:\n            return {\n                ...state,\n                hasError: action.payload\n            }\n        default:\n            return state\n    }\n}","import { combineReducers} from \"redux\"\n\nimport notes from './notes'\nimport taskers from './taskers'\nimport notebook from './notebook'\nimport error from \"./error\"\n\nexport default combineReducers({notes, taskers, notebook, error})","import {applyMiddleware, createStore} from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\n\nexport default createStore(rootReducer, applyMiddleware(thunk))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {HashRouter} from 'react-router-dom'\nimport App from \"./Components/App\"\n\nimport {Provider} from 'react-redux'\n\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}