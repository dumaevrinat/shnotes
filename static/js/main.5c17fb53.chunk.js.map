{"version":3,"sources":["reducers/error.js","reducers/user.js","reducers/search.js","reducers/accounts.js","reducers/tasks.js","reducers/index.js","actions/types.js","store/index.js","Components/Pages/UserNotFoundPage.jsx","actions/error.js","actions/user.js","Components/StatisticItem/index.jsx","Components/UserHeader/index.jsx","actions/tasks.js","api/index.js","utils/index.js","actions/accounts.js","Components/Post/index.jsx","Components/Pages/UserPage.jsx","actions/search.js","Components/Search/index.jsx","context.js","Components/Header/index.jsx","Components/Menu/index.jsx","Components/Pages/TasksPage.jsx","Components/App/index.jsx","serviceWorker.js","index.js"],"names":["initialState","isOpen","error","message","user","userLoading","userNotFound","searchUsersLoading","searchUsers","accounts","tasks","combineReducers","state","action","type","payload","search","filter","item","id","map","createStore","rootReducer","applyMiddleware","thunk","useStyles","makeStyles","theme","root","display","flexDirection","title","marginTop","spacing","marginBottom","UserNotFoundPage","classes","history","useHistory","Container","maxWidth","className","Grow","in","Typography","variant","Button","size","startIcon","ArrowForwardRounded","onClick","push","setIsOpenError","createError","dispatch","setGetUserLoading","isLoading","setUserNotFound","isFound","alignItems","marginRight","marginLeft","value","StatisticItem","text","Box","fontSize","color","avatar","width","height","margin","biography","whiteSpace","stats","justifyContent","breakpoints","down","UserHeader","username","fullName","profilePicUrl","postsCount","followersCount","followingCount","Zoom","Avatar","src","textAlign","component","updateTask","task","runTask","getState","a","find","t","isWorking","args","stoppedCallback","isDone","getLikesOnPost","shortcode","after","first","axios","get","params","query_id","timeout","ms","Promise","resolve","setTimeout","addAllAccountsFromLikes","taskId","hasNextPage","then","result","data","edgeLikedBy","shortcode_media","edge_liked_by","edges","page_info","has_next_page","end_cursor","catch","content","padding","cover","maxHeight","Post","likeCount","commentCount","previewLink","useDispatch","Card","CardMedia","image","CardContent","CardActions","name","uuidv4","addTask","startGetLikes","media","UserPage","props","isOpenError","useSelector","useEffect","match","__a","graphql","response","status","CircularProgress","full_name","profile_pic_url","edge_owner_to_timeline_media","count","edge_followed_by","edge_follow","Grid","container","edge","direction","xs","sm","md","key","node","edge_media_to_comment","thumbnail_resources","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","open","onClose","event","reason","setSearchLoading","zIndex","overflowX","background","palette","light","transition","transitions","create","duration","short","up","expandedSearch","common","white","paddingLeft","paddingRight","searchInput","flexGrow","results","overflowY","Search","useState","setExpandedSearch","query","setQuery","delayedSearch","useCallback","_","debounce","q","users","Paper","elevation","clsx","Hidden","xsDown","InputBase","placeholder","onChange","target","onFocus","onBlur","length","IconButton","ClearRounded","Collapse","LinearProgress","List","dense","ListItem","button","pk","ListItemAvatar","ListItemText","primary","textOverflow","overflow","Context","React","createContext","menuButton","settings","infoButton","Header","toggleMenu","useContext","AppBar","position","Badge","showZero","max","badgeContent","Archive","Assignment","list","nested","link","textDecoration","Menu","isOpenMenu","Drawer","Divider","subheader","ListSubheader","ListItemIcon","itemIconNotebook","TasksPage","fontWeight","secondary","Checkbox","checked","icon","SyncDisabledRounded","checkedIcon","SyncRounded","HighlightOffRounded","CheckRounded","createMuiTheme","main","dark","App","setIsOpenMenu","store","ThemeProvider","responsiveFontSizes","Provider","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.5c17fb53.chunk.js","sourcesContent":["import {\n    CREATE_ERROR,\n    SET_OPEN_ERROR\n} from \"../actions/types\"\n\nconst initialState = {\n    isOpen: false,\n    error: {\n        message: null\n    }\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case SET_OPEN_ERROR:\n            return {\n                ...state,\n                isOpen: action.payload\n            }\n        default:\n            return state\n    }\n}","import {\n    GET_USER,\n    GET_USER_LOADING,\n    SET_USER_NOT_FOUND\n} from '../actions/types'\n\nconst initialState = {\n    user: null,\n    userLoading: true,\n    userNotFound: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case GET_USER_LOADING:\n            return {\n                ...state,\n                userLoading: action.payload\n            }\n        case GET_USER:\n            return {\n                ...state,\n                user: action.payload\n            }\n        case SET_USER_NOT_FOUND:\n            return {\n                ...state,\n                userNotFound: action.payload\n            }\n        default:\n            return state\n    }\n}","import {\n    SEARCH_USER,\n    SEARCH_USER_LOADING,\n    SEARCH_USER_CLEAR\n} from '../actions/types'\n\nconst initialState = {\n    searchUsersLoading: false,\n    searchUsers: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case SEARCH_USER:\n            return {\n                ...state,\n                searchUsers: action.payload\n            }\n        case SEARCH_USER_LOADING:\n            return {\n                ...state,\n                searchUsersLoading: action.payload\n            }\n        case SEARCH_USER_CLEAR:\n            return {\n                ...state,\n                searchUsers: []\n            }\n        default:\n            return state\n    }\n}","import {\n    ADD_ACCOUNTS,\n    CLEAR_TASKS\n} from '../actions/types'\n\nconst initialState = {\n    accounts: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_ACCOUNTS:\n            return {\n                ...state,\n                accounts: [...state.accounts, ...action.payload]\n            }\n        case CLEAR_TASKS:\n            return {\n                ...state,\n                accounts: []\n            }\n        default:\n            return state\n    }\n}","import {\n    ADD_TASK,\n    DELETE_TASK,\n    UPDATE_TASK,\n    CLEAR_TASKS\n} from \"../actions/types\"\n\nconst initialState = {\n    tasks: []\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_TASK:\n            return {\n                ...state,\n                tasks: [action.payload, ...state.tasks]\n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.filter((item) => item.id !== action.payload)\n            }\n        case UPDATE_TASK:\n            return {\n                ...state,\n                tasks: state.tasks.map((item) => item.id === action.payload.id ? action.payload : item)\n            }\n        case CLEAR_TASKS:\n            return {\n                ...state,\n                tasks: []\n            }\n        default:\n            return state\n    }\n}","import error from \"./error\"\nimport user from \"./user\"\nimport search from \"./search\"\nimport accounts from \"./accounts\"\nimport tasks from \"./tasks\"\n\nimport {combineReducers} from \"redux\"\n\nexport default combineReducers({error, user, search, accounts, tasks})","export const GET_USER_LOADING = 'USER_LOADING'\nexport const GET_USER = 'GET_USER'\nexport const SET_USER_NOT_FOUND = 'SET_USER_NOT_FOUND'\n\nexport const SEARCH_USER_LOADING = 'SEARCH_USER_LOADING'\nexport const SEARCH_USER = 'SEARCH_USER'\nexport const SEARCH_USER_CLEAR = 'SEARCH_USER_CLEAR'\n\nexport const ADD_ACCOUNTS = 'ADD_ACCOUNTS'\nexport const CLEAR_ACCOUNTS = 'CLEAR_ACCOUNTS'\n\nexport const ADD_TASK = 'ADD_TASK'\nexport const UPDATE_TASK = 'UPDATE_TASK'\nexport const DELETE_TASK = 'DELETE_TASK'\nexport const CLEAR_TASKS = 'CLEAR_TASKS'\n\nexport const CREATE_ERROR = 'CREATE_ERROR'\nexport const SET_OPEN_ERROR = 'SET_OPEN_ERROR'\n","import {applyMiddleware, createStore} from 'redux'\nimport thunk from 'redux-thunk'\nimport rootReducer from '../reducers'\n\nexport default createStore(rootReducer, applyMiddleware(thunk))","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useHistory} from \"react-router-dom\"\nimport Grow from \"@material-ui/core/Grow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport {ArrowForwardRounded} from \"@material-ui/icons\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    },\n    title: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4)\n    }\n}))\n\nexport default function UserNotFoundPage() {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const goHome = () => {\n        history.push('/')\n    }\n\n    return (\n        <Container maxWidth=\"sm\" className={classes.root}>\n            <Grow in={true}>\n                <div>\n                    <Typography variant=\"h4\" className={classes.title}>\n                        User not found :(\n                    </Typography>\n                    <Button\n                        variant='outlined'\n                        size='large'\n                        startIcon={<ArrowForwardRounded/>}\n                        onClick={() => goHome()}\n                    >\n                        Main page\n                    </Button>\n                </div>\n            </Grow>\n        </Container>\n    )\n}","import {\n    CREATE_ERROR,\n    SET_OPEN_ERROR\n} from \"./types\"\n\n\nexport const setIsOpenError = (isOpen) => ({\n    type: SET_OPEN_ERROR,\n    payload: isOpen\n})\n\nexport const createError = (error) => (dispatch) => {\n    dispatch({\n        type: CREATE_ERROR,\n        payload: error\n    })\n\n    dispatch(setIsOpenError(true))\n}","import {\n    GET_USER,\n    GET_USER_LOADING,\n    SET_USER_NOT_FOUND,\n} from './types'\n\nimport axios from 'axios'\nimport {createError} from \"./error\";\n\nexport const getUser = (username) => (dispatch) => {\n    dispatch(setGetUserLoading(true))\n    axios\n        .get(`https://www.instagram.com/${username}`, {\n            params: {\n                __a: 1\n            }\n        })\n        .then((result) => {\n            if (result.data.graphql) {\n                dispatch({\n                    type: GET_USER,\n                    payload: result.data.graphql.user\n                })\n            } else {\n                dispatch(createError({message: 'Error getting information from Instagram'}))\n            }\n\n            dispatch(setGetUserLoading(false))\n        })\n        .catch((error) => {\n            if (error.response && (error.response.status === 404)) {\n                dispatch(setUserNotFound(true))\n            } else {\n                dispatch(createError({message: 'Error getting information from Instagram'}))\n            }\n\n            dispatch(setGetUserLoading(false))\n        })\n}\n\n\nexport const setGetUserLoading = (isLoading) => ({\n    type: GET_USER_LOADING,\n    payload: isLoading\n})\n\nexport const setUserNotFound = (isFound) => ({\n    type: SET_USER_NOT_FOUND,\n    payload: isFound\n})","import Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        alignItems: 'center',\n        marginRight: theme.spacing(2),\n        marginLeft: theme.spacing(2),\n    },\n    value: {\n        marginRight: theme.spacing(1)\n    }\n}))\n\n\nexport default function StatisticItem({text, value}) {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Typography className={classes.value} variant='subtitle2'>\n                <Box fontSize=\"h6.fontSize\">\n                    {value}\n                </Box>\n            </Typography>\n            <Typography variant='subtitle2' color='textSecondary'>{text}</Typography>\n        </div>\n    )\n}","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Zoom from \"@material-ui/core/Zoom\";\nimport {Box} from \"@material-ui/core\";\nimport StatisticItem from \"../StatisticItem\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center'\n    },\n    avatar: {\n        width: theme.spacing(16),\n        height: theme.spacing(16),\n    },\n\n    title: {\n        margin: theme.spacing(1),\n        marginBottom: theme.spacing(2),\n    },\n    biography: {\n        whiteSpace: 'pre-line'\n    },\n\n    stats: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        marginBottom: theme.spacing(2),\n        [theme.breakpoints.down('xs')]: {\n            flexDirection: 'column',\n        },\n    }\n}))\n\nexport default function UserHeader({username, fullName, biography, profilePicUrl, postsCount, followersCount, followingCount}) {\n    const classes = useStyles()\n\n    return (\n        <div className={classes.root}>\n            <Zoom in={true}>\n                <Avatar className={classes.avatar} src={profilePicUrl}/>\n            </Zoom>\n\n            <div>\n                <div className={classes.title}>\n                    <Typography variant=\"h6\">\n                        <Box textAlign=\"center\">\n                            {username}\n                        </Box>\n                    </Typography>\n                    <Typography variant=\"overline\" color='textSecondary'>\n                        <Box textAlign=\"center\" fontSize=\"h6.fontSize\">\n                            {fullName}\n                        </Box>\n                    </Typography>\n                    <Typography component='div' className={classes.biography}>\n                        <Box textAlign=\"center\">\n                            {biography}\n                        </Box>\n                    </Typography>\n                </div>\n                <div className={classes.stats}>\n                    <StatisticItem text='Posts' value={postsCount}/>\n                    <StatisticItem text='Followers' value={followersCount}/>\n                    <StatisticItem text='Following' value={followingCount}/>\n                </div>\n            </div>\n        </div>\n    )\n}","import {\n    ADD_TASK,\n    DELETE_TASK,\n    UPDATE_TASK,\n    CLEAR_TASKS\n} from './types'\n\nexport const addTask = (task) => ({\n    type: ADD_TASK,\n    payload: task\n})\n\nexport const deleteTask = (id) => ({\n    type: DELETE_TASK,\n    payload: id\n})\n\nexport const updateTask = (task) => ({\n    type: UPDATE_TASK,\n    payload: task\n})\n\nexport const clearTasks = () => ({\n    type: CLEAR_TASKS\n})\n\nexport const nextTask = () => (dispatch, getState) => {\n    const task = getState().tasks.tasks.find(t => t.isWorking === false && t.isDone === false)\n    if (task) {\n        dispatch(runTask(task))\n    }\n}\n\nexport const runTask = (task) => async (dispatch, getState) => {\n    const workingTask = getState().tasks.tasks.find(t => t.isWorking === true)\n\n    if (!workingTask) {\n        dispatch(updateTask({...task, isWorking: true}))\n\n        await dispatch(task.action(...task.args, task.stoppedCallback))\n\n        dispatch(updateTask({...task, isWorking: false, isDone: true}))\n\n        dispatch(nextTask())\n    }\n}\n","import axios from \"axios\";\n\n\nexport const getLikesOnPost = (shortcode, after = '', first = 50) => {\n    return axios.get('https://www.instagram.com/graphql/query/', {\n        params: {\n            query_id: 17864450716183058,\n            shortcode: shortcode,\n            first: first,\n            after: after\n        }\n    })\n}\n\nexport const search = (query) => {\n    return axios.get('https://www.instagram.com/web/search/topsearch/', {\n        params: {\n            query: query\n        }\n    })\n}","export const isTaskStop = (task) => {\n    if (task) {\n        return !task.isWorking\n    } else {\n        return true\n    }\n}\n\nexport const timeout = (ms) => {\n    return new Promise(resolve => setTimeout(resolve, ms));\n}","import {\n    ADD_ACCOUNTS,\n    CLEAR_ACCOUNTS\n} from './types'\n\nimport {createError} from \"./error\"\nimport {getLikesOnPost} from \"../api\";\nimport {isTaskStop, timeout} from \"../utils\";\n\nexport const addAccounts = (accounts) => ({\n    type: ADD_ACCOUNTS,\n    payload: accounts\n})\n\nexport const clearAccounts = () => ({\n    type: CLEAR_ACCOUNTS\n})\n\nexport const addAllAccountsFromLikes = (shortcode, taskId) => async (dispatch, getState) => {\n    let hasNextPage = true\n    let after = ''\n\n    while (hasNextPage && !isTaskStop(getState().tasks.tasks.find(t => t.id === taskId))) {\n        await timeout( 4000)\n        await getLikesOnPost(shortcode, after)\n            .then((result) => {\n                if (result.data.data) {\n                    const edgeLikedBy = result.data.data.shortcode_media.edge_liked_by\n\n                    dispatch(addAccounts(edgeLikedBy.edges))\n\n                    hasNextPage = edgeLikedBy.page_info.has_next_page\n                    after = edgeLikedBy.page_info.end_cursor\n                } else {\n                    dispatch(createError({message: 'Error getting information from Instagram'}))\n                    hasNextPage = false\n                }\n            })\n            .catch((error) => {\n                dispatch(createError({message: 'Error getting information from Instagram'}))\n                hasNextPage = false\n            })\n    }\n\n}\n\n","import React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Button from \"@material-ui/core/Button\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport StatisticItem from \"../StatisticItem\";\nimport {useDispatch} from \"react-redux\";\nimport {addTask, runTask} from \"../../actions/tasks\";\nimport {v4 as uuidv4} from 'uuid'\nimport {addAllAccountsFromLikes} from \"../../actions/accounts\";\nimport CardActions from \"@material-ui/core/CardActions\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        maxWidth: 480,\n    },\n    content: {\n        padding: theme.spacing(1),\n    },\n    cover: {\n        maxHeight: 480,\n    }\n}))\n\nexport default function Post({shortcode, likeCount, commentCount, previewLink}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const startGetLikes = (shortcode, name) => {\n        const id = uuidv4()\n        const task = {\n            id: id,\n            isWorking: false,\n            isDone: false,\n            action: addAllAccountsFromLikes,\n            args: [shortcode, id],\n            name: name\n        }\n\n        dispatch(addTask(task))\n        dispatch(runTask(task))\n    }\n\n    return (\n        <Card className={classes.root} variant=\"outlined\">\n            <CardMedia\n                component=\"img\"\n                className={classes.cover}\n                image={previewLink}\n            />\n            <CardContent className={classes.content}>\n                <StatisticItem value={likeCount} text='Likes'/>\n                <StatisticItem value={commentCount} text='Comments'/>\n            </CardContent>\n            <CardActions>\n                <Button onClick={() => startGetLikes(shortcode,)}>\n                    Get likes\n                </Button>\n            </CardActions>\n        </Card>\n    )\n}","import React, {useEffect} from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useHistory} from \"react-router-dom\"\nimport {getUser} from \"../../actions/user\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport {setIsOpenError} from \"../../actions/error\";\nimport {setUserNotFound} from \"../../actions/user\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport UserHeader from '../UserHeader'\nimport Post from \"../Post\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    media: {\n        display: 'flex',\n        flexDirection: 'column',\n    }\n}))\n\nexport default function UserPage(props) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n    const history = useHistory()\n\n    const isOpenError = useSelector(state => state.error.isOpen)\n    const error = useSelector(state => state.error.error)\n\n    const user = useSelector(state => state.user.user)\n    const userLoading = useSelector(state => state.user.userLoading)\n    const userNotFound = useSelector(state => state.user.userNotFound)\n\n    useEffect(() => {\n        dispatch(setUserNotFound(false))\n\n        dispatch(getUser(props.match.params.username))\n    }, [dispatch, props.match.params.username])\n\n    useEffect(() => {\n        if (userNotFound) {\n            history.push('/usernotfound')\n        }\n    }, [userNotFound])\n\n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n        dispatch(setIsOpenError(false))\n    }\n\n    return (\n        <Container maxWidth=\"md\" className={classes.root}>\n            {userLoading && <CircularProgress/>}\n            {userNotFound && <div>User not found</div>}\n            {!userNotFound && !userLoading &&\n            <div>\n                <UserHeader\n                    username={user.username}\n                    fullName={user.full_name}\n                    biography={user.biography}\n                    profilePicUrl={user.profile_pic_url}\n                    postsCount={user.edge_owner_to_timeline_media.count}\n                    followersCount={user.edge_followed_by.count}\n                    followingCount={user.edge_follow.count}\n                />\n\n                <Grid container spacing={3}>\n                    {user.edge_owner_to_timeline_media.edges.map((edge) =>\n                        <Zoom in={true}>\n                            <Grid container direction=\"column\" alignItems=\"center\" item xs={12} sm={6} md={4}>\n                                <Post\n                                    key={edge.node.id}\n                                    shortcode={edge.node.shortcode}\n                                    likeCount={edge.node.edge_liked_by.count}\n                                    commentCount={edge.node.edge_media_to_comment.count}\n                                    previewLink={edge.node.thumbnail_resources[4].src}\n                                />\n                            </Grid>\n                        </Zoom>\n                    )}\n                </Grid>\n            </div>\n            }\n\n            <Snackbar\n                anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                autoHideDuration={2000}\n                open={isOpenError}\n                message={error.message}\n                onClose={closeSnackbar}\n            />\n        </Container>\n    )\n}","import {\n    SEARCH_USER_LOADING,\n    SEARCH_USER,\n    SEARCH_USER_CLEAR\n} from './types'\n\nimport axios from 'axios'\nimport {createError} from \"./error\";\n\nexport const searchUsers = (users) => ({\n    type: SEARCH_USER,\n    payload: users\n})\n\nexport const clearSearchUsers = () => ({\n    type: SEARCH_USER_CLEAR\n})\n\nconst setSearchLoading = (isLoading) => ({\n    type: SEARCH_USER_LOADING,\n    payload: isLoading\n})\n\nexport const search = (query) => (dispatch) => {\n    dispatch(setSearchLoading(true))\n\n    axios\n        .get('https://www.instagram.com/web/search/topsearch/', {\n            params: {\n                query: query\n            }\n        })\n        .then((result) => {\n            if (result.data.users) {\n                dispatch(searchUsers(result.data.users))\n            } else {\n                dispatch(createError({message: 'Error getting information from Instagram'}))\n            }\n\n            dispatch(setSearchLoading(false))\n        })\n        .catch(() => {\n            dispatch(createError({message: 'Error getting information from Instagram'}))\n            dispatch(setSearchLoading(false))\n        })\n}\n\n","import React, {useCallback, useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputBase from \"@material-ui/core/InputBase\";\n\nimport {useHistory} from \"react-router-dom\"\nimport Paper from \"@material-ui/core/Paper\";\nimport {ClearRounded} from \"@material-ui/icons\";\nimport SearchRoundedIcon from '@material-ui/icons/SearchRounded'\nimport Collapse from \"@material-ui/core/Collapse\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nimport _ from \"lodash\"\nimport {clearSearchUsers, search} from \"../../actions/search\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport clsx from \"clsx\";\nimport LinearProgress from \"@material-ui/core/LinearProgress\";\nimport {Hidden} from \"@material-ui/core\";\nimport Box from \"@material-ui/core/Box\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        zIndex: 1,\n        width: '100%',\n        maxWidth: '100%',\n        overflowX: 'hidden',\n        background: theme.palette.background.light,\n        transition: theme.transitions.create('all', {\n            duration: theme.transitions.duration.short\n        }),\n        [theme.breakpoints.up('xs')]: {\n            maxWidth: 500,\n        }\n    },\n    expandedSearch: {\n        background: theme.palette.common.white\n    },\n    search: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: theme.spacing(1),\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n    },\n    searchInput: {\n        marginLeft: theme.spacing(2),\n        flexGrow: 1\n    },\n    results: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        overflowY: 'auto',\n        maxHeight: 450\n    }\n}))\n\nexport default function Search() {\n    const classes = useStyles()\n    const history = useHistory()\n    const dispatch = useDispatch()\n\n    const [expandedSearch, setExpandedSearch] = useState(false)\n\n    const searchUsers = useSelector(state => state.search.searchUsers)\n    const searchUsersLoading = useSelector(state => state.search.searchUsersLoading)\n\n    const [query, setQuery] = useState('')\n    const delayedSearch = useCallback(_.debounce(q => dispatch(search(q)), 500), [])\n\n    const onSearchUsername = (username) => {\n        if (username || username !== '') {\n            history.push(`/u/${username}`)\n            setQuery('')\n        }\n    }\n\n    const onChange = (query) => {\n        setQuery(query)\n        delayedSearch(query)\n    }\n\n    const clearResults = () => {\n        setQuery('')\n        dispatch(clearSearchUsers())\n\n    }\n\n    return (\n        <Paper elevation={expandedSearch ? 1 : 0}\n               className={clsx(classes.root, expandedSearch && classes.expandedSearch)}>\n            <div className={classes.search}>\n                <Hidden xsDown>\n                    <SearchRoundedIcon color=\"action\"/>\n                </Hidden>\n\n                <InputBase\n                    className={classes.searchInput}\n                    value={query}\n                    placeholder=\"Search\"\n                    onChange={(event) => onChange(event.target.value)}\n                    onFocus={() => setExpandedSearch(true)}\n                    onBlur={() => setExpandedSearch(false)}\n                />\n\n                {(query || searchUsers.length !== 0) &&\n                <IconButton\n                    color='inherit'\n                    size='small'\n                    onClick={() => clearResults()}\n                >\n                    <ClearRounded/>\n                </IconButton>\n                }\n            </div>\n\n            <Collapse in={expandedSearch && searchUsersLoading} timeout={150}>\n                <LinearProgress/>\n            </Collapse>\n\n            <Collapse in={expandedSearch && searchUsers.length !== 0} timeout={150}>\n                    <List dense={true} className={classes.results}>\n                        {searchUsers.map((user) =>\n                            <ListItem button key={user.user.pk} onClick={() => onSearchUsername(user.user.username)}>\n                                <ListItemAvatar>\n                                    <Avatar src={user.user.profile_pic_url}/>\n                                </ListItemAvatar>\n                                <ListItemText primary={<Box component='div' textOverflow=\"ellipsis\" overflow=\"hidden\">{user.user.username}</Box>}/>\n                            </ListItem>\n                        )}\n                    </List>\n            </Collapse>\n        </Paper>\n    )\n}","import React from 'react'\n\nconst Context = React.createContext()\n\nexport default Context","import React, {useContext} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport AppBar from '@material-ui/core/AppBar'\n\nimport Search from \"../Search\";\nimport {Archive, Assignment} from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Badge from \"@material-ui/core/Badge\";\nimport {useSelector} from \"react-redux\";\nimport Hidden from \"@material-ui/core/Hidden\";\nimport Context from \"../../context\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'row',\n        alignItems: 'flex-start',\n        height: theme.spacing(8),\n        marginBottom: theme.spacing(2),\n        padding: theme.spacing(1),\n        width: '100%'\n    },\n    menuButton: {\n        marginRight: theme.spacing(1)\n    },\n    settings: {\n        display: 'flex',\n        marginLeft: 'auto',\n    },\n    infoButton: {\n        marginRight: theme.spacing(1),\n    }\n}))\n\nexport default function Header() {\n    const classes = useStyles()\n\n    const {toggleMenu} = useContext(Context)\n\n    const accounts = useSelector(state => state.accounts.accounts)\n    const tasks = useSelector(state => state.tasks.tasks)\n\n    return (\n        <AppBar position=\"sticky\" color='inherit' elevation={0} className={classes.root}>\n            <IconButton className={classes.menuButton} onClick={() => toggleMenu()}>\n                <MenuIcon/>\n            </IconButton>\n\n            <Search/>\n\n            <Hidden xsDown>\n                <div className={classes.settings}>\n                    <IconButton className={classes.infoButton}>\n                        <Badge showZero max={9999} badgeContent={accounts.length} color='primary'>\n                            <Archive/>\n                        </Badge>\n                    </IconButton>\n\n                    <IconButton className={classes.infoButton}>\n                        <Badge showZero badgeContent={`${tasks.filter(t => t.isDone === true).length}/${tasks.length}`} color='secondary'>\n                            <Assignment/>\n                        </Badge>\n                    </IconButton>\n                </div>\n            </Hidden>\n        </AppBar>\n    )\n}","import React, {useContext} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport {Archive, Assignment} from \"@material-ui/icons\"\nimport Context from \"../../context\"\nimport {useHistory} from \"react-router-dom\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n\n    },\n    title: {\n        padding: theme.spacing(1)\n    },\n    list: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: 260,\n        padding: 0\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    link: {\n        textDecoration: \"none\",\n        color: 'inherit',\n    }\n}))\n\nexport default function Menu({isOpenMenu}) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const {toggleMenu} = useContext(Context)\n\n    const goHomePage = () => {\n        toggleMenu()\n        history.push('/')\n    }\n\n    const goTasksPage = () => {\n        toggleMenu()\n        history.push('/tasks')\n    }\n\n    return (\n        <Drawer className={classes.root} open={isOpenMenu} onClose={() => toggleMenu()}>\n                <ListItem button onClick={() => goHomePage()}>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Account scraper\n                    </Typography>\n                </ListItem>\n            <Divider/>\n            <List className={classes.list} subheader={<ListSubheader>Settings</ListSubheader>}>\n                <ListItem button onClick={() => {}}>\n                    <ListItemIcon className={classes.itemIconNotebook}><Archive/></ListItemIcon>\n                    <ListItemText primary='Accounts'/>\n                </ListItem>\n                <ListItem button onClick={() => goTasksPage()}>\n                    <ListItemIcon className={classes.itemIconNotebook}><Assignment/></ListItemIcon>\n                    <ListItemText primary='Tasks'/>\n                </ListItem>\n            </List>\n        </Drawer>\n    )\n}","import React from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport Grow from \"@material-ui/core/Grow\";\n\nimport {\n    CheckRounded,\n    HighlightOffRounded,\n    SyncDisabledRounded,\n    SyncRounded\n} from \"@material-ui/icons\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport Button from \"@material-ui/core/Button\";\nimport {updateTask} from \"../../actions/tasks\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Box} from \"@material-ui/core\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column'\n    }\n}))\n\nexport default function TasksPage() {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const tasks = useSelector(state => state.tasks.tasks)\n\n    return (\n        <Container maxWidth=\"md\" className={classes.root}>\n            <Grow in={true}>\n                <div>\n                    <Typography variant=\"overline\">\n                        <Box fontWeight=\"fontWeightMedium\">\n                            Tasks\n                        </Box>\n                    </Typography>\n                    <Paper>\n                        <List>\n                            {tasks.map((task) =>\n                                <ListItem key={task.id}>\n                                    <ListItemText primary={task.name} secondary={task.id}/>\n\n                                    <Checkbox checked={task.isWorking} icon={<SyncDisabledRounded/>} checkedIcon={<SyncRounded/>}/>\n                                    <Button\n                                        size='small'\n                                        startIcon={<HighlightOffRounded/>}\n                                        onClick={() => dispatch(updateTask({...task, isWorking: false}))}\n                                    >\n                                        stop\n                                    </Button>\n                                    {task.isDone && <CheckRounded/>}\n                                </ListItem>\n                            )}\n                        </List>\n                    </Paper>\n                </div>\n            </Grow>\n        </Container>\n    )\n}","import React, {useState} from 'react'\nimport {Provider} from \"react-redux\"\nimport store from \"../../store\"\nimport {BrowserRouter, Switch, Route, HashRouter} from \"react-router-dom\"\nimport UserNotFoundPage from \"../Pages/UserNotFoundPage\"\nimport UserPage from \"../Pages/UserPage\"\nimport Header from \"../Header\"\nimport {createMuiTheme, responsiveFontSizes} from \"@material-ui/core\"\nimport {ThemeProvider} from \"@material-ui/styles\"\nimport Context from \"../../context\"\nimport Menu from \"../Menu\";\nimport TasksPage from \"../Pages/TasksPage\";\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            main: '#ea80fc',\n            light: '#6effe8',\n            dark: '#00b686'\n        },\n        secondary: {\n            main: '#7c4dff',\n            light: '#9162e4',\n            dark: '#280680'\n        },\n        background: {\n            light: '#f1f3f4'\n        }\n    },\n})\n\n\nexport default function App() {\n    const [isOpenMenu, setIsOpenMenu] = useState(false)\n\n    const toggleMenu = () => {\n        setIsOpenMenu(!isOpenMenu)\n    }\n\n\n    return (\n        <Provider store={store}>\n            <ThemeProvider theme={responsiveFontSizes(theme)}>\n                <Context.Provider value={{toggleMenu}}>\n                    <HashRouter>\n                        <Menu isOpenMenu={isOpenMenu}/>\n                        <Header/>\n\n                        <Switch>\n                            <Route path='/usernotfound' component={UserNotFoundPage}/>\n                            <Route path='/u/:username' component={UserPage}/>\n                            <Route path='/tasks' component={TasksPage}/>\n                        </Switch>\n                    </HashRouter>\n                </Context.Provider>\n            </ThemeProvider>\n        </Provider>\n    );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './Components/App'\nimport * as serviceWorker from './serviceWorker'\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}