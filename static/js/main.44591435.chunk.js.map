{"version":3,"sources":["context.js","api/api.js","Components/DialogCreateNotebook/index.jsx","Components/Pages/HomePage/index.jsx","actions/error.js","actions/types.js","actions/notes.js","Components/Note/index.jsx","actions/taskers.js","Components/Task/index.jsx","Components/Tasker/index.jsx","Components/NoteBuilder/index.jsx","Components/TaskerBuilder/index.jsx","Components/Builder/index.jsx","actions/notebook.js","Components/Menu/index.jsx","Components/Header/index.jsx","Components/DialogUpdateNotebook/index.jsx","Components/DialogDeleteNotebook/index.jsx","utils/getErrorMessage.js","Components/Pages/NotebookPage/index.jsx","Components/Pages/NotebookNotFoundPage/index.jsx","Components/App/index.jsx","reducers/notes.js","reducers/taskers.js","reducers/notebook.js","reducers/error.js","reducers/index.js","store/index.js","index.js"],"names":["Context","React","createContext","axios","create","baseURL","useStyles","makeStyles","theme","root","CreateNotebookDialog","open","classes","history","useHistory","setIsOpenCreateNotebookDialog","useContext","useState","notebookName","setNotebookName","Dialog","className","onClose","DialogTitle","DialogContent","DialogContentText","TextField","autoFocus","fullWidth","label","type","value","onInput","event","target","DialogActions","Button","onClick","color","notebook","id","uuidv4","name","API","post","then","result","push","data","catch","handleCreateNotebook","display","flexDirection","alignItems","title","marginTop","spacing","marginBottom","mainButton","animation","maxWidth","maxHeight","HomePage","isOpenCreateNotebookDialog","defaultOptions","loop","autoplay","animationData","rendererSettings","preserveAspectRatio","Container","Provider","Grow","in","Typography","variant","size","startIcon","ArrowForward","options","setHasError","hasError","payload","createError","error","dispatch","updateNote","newNote","meta","offline","effect","url","method","commit","rollback","setNotesLoading","isLoading","content","paddingBottom","actions","paddingTop","paddingLeft","paddingRight","justifyContent","text","whiteSpace","priority","borderColor","palette","secondary","light","Note","useDispatch","expanded","setExpanded","handleExpandClick","Card","clsx","highPriority","onMouseOver","onMouseOut","CardContent","Fade","CardActions","Tooltip","Checkbox","checked","icon","StarBorder","checkedIcon","Star","onChange","done","IconButton","aria-label","params","noteId","Close","setTaskersLoading","textDone","textDecoration","doneCheckBox","padding","marginRight","deleteButton","main","Task","CheckCircleOutline","CheckCircle","newTask","taskId","HighlightOff","Tasker","tasks","map","task","key","newTasker","taskListId","NoteBuilder","setText","InputBase","placeholder","multiline","width","TaskerBuilder","tasker","setTasker","updateTask","index","newTaskListsData","slice","deleteTask","splice","addNewTask","length","onKeyDown","taskIndex","handleKeyDown","Add","inputTitle","height","typography","h6","fontSize","fontWeight","tools","Builder","notebookStringId","isTasker","setIsTasker","setTitle","noteData","setNoteData","taskerData","setTaskerData","setHighPriority","AssignmentTurnedIn","Assignment","disableElevation","note","notebookId","handleAddButton","setNotebookLoading","list","itemIconNotebook","primary","itemIconTag","itemIconChange","itemIconDelete","nested","link","Menu","isOpenMenu","notebookUrl","toggleMenu","setIsOpenDeleteNotebookDialog","setIsOpenUpdateNotebookDialog","Drawer","transitionDuration","to","activeClassName","ListItem","button","Divider","List","subheader","ListSubheader","ListItemIcon","BookOutlined","ListItemText","Hidden","smUp","copy","ShareOutlined","EditOutlined","DeleteOutline","menuButton","editButton","status","marginLeft","Header","useSelector","state","online","AppBar","position","elevation","Toolbar","edge","xsDown","Share","Sync","SyncDisabled","UpdateNotebookDialog","notebookNameTextField","setNotebookNameTextField","useEffect","handleUpdateNotebook","DeleteNotebookDialog","stringId","get","getErrorMessageByType","progressBar","expand","transform","transition","transitions","duration","shortest","expandOpen","NotebookPage","props","expandedNotes","setExpandedNotes","expandedTaskLists","setExpandedTaskLists","notes","taskers","isLoadingNotes","noteLoading","isLoadingTaskers","taskerLoading","setIsOpenMenu","isOpenUpdateNotebookDialog","isOpenDeleteNotebookDialog","match","response","code","getTaskers","location","pathname","Collapse","timeout","CircularProgress","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","message","reason","NotebookNotFoundPage","HomeOutlined","createMuiTheme","App","ThemeProvider","responsiveFontSizes","exact","path","component","initialState","notebookLoading","combineReducers","action","filter","item","taskerIndex","findIndex","newTaskers","unshift","customConfig","config","discard","_action","_retries","request","createStore","rootReducer","compose","applyMiddleware","thunk","ReactDOM","render","store","document","getElementById"],"mappings":"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","file":"static/js/main.44591435.chunk.js","sourcesContent":["import React from 'react'\n\nconst Context = React.createContext()\n\nexport default Context","import axios from 'axios'\n\nexport default axios.create({\n    baseURL: 'https://dumaev.digital/api/v1/'\n})","import React, {useContext, useState} from \"react\"\nimport { useHistory } from \"react-router-dom\"\n\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport Context from \"../../context\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport TextField from \"@material-ui/core/TextField\"\nimport API from \"../../api/api\"\n\nimport {v4 as uuidv4} from 'uuid'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    }\n}))\n\nexport default function CreateNotebookDialog({open}) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const {setIsOpenCreateNotebookDialog}= useContext(Context)\n\n    const [notebookName, setNotebookName] = useState('')\n\n    const handleCreateNotebook = () => {\n        const notebook = {\n            id: uuidv4(),\n            name: notebookName\n        }\n\n        API\n            .post(\"notebooks/add\", notebook)\n            .then((result) => {\n                history.push(`/notebook/${result.data}`)\n            })\n            .catch(() => {\n            })\n\n        setIsOpenCreateNotebookDialog(false)\n    }\n\n    return (\n        <Dialog\n            className={classes.root}\n            open={open}\n            onClose={() => setIsOpenCreateNotebookDialog(false)}\n        >\n            <DialogTitle>Создать новый блокнот</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Введите название блокнота, который хотите создать\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    label=\"Название блокнота\"\n                    type=\"text\"\n                    value={notebookName}\n                    onInput={(event) => setNotebookName(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setIsOpenCreateNotebookDialog(false)} color=\"primary\">\n                    Назад\n                </Button>\n                <Button onClick={() => handleCreateNotebook()} color=\"primary\">\n                    Создать\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import React, {useState} from \"react\"\nimport Typography from \"@material-ui/core/Typography\"\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Container from \"@material-ui/core/Container\"\nimport {ArrowForward} from \"@material-ui/icons\"\nimport Button from \"@material-ui/core/Button\"\nimport Grow from \"@material-ui/core/Grow\"\nimport CreateNotebookDialog from \"../../DialogCreateNotebook\"\nimport Context from \"../../../context\"\n\nimport Lottie from 'react-lottie'\nimport animationData from '../../../lotties/astronaut.json'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: \"center\",\n    },\n    title: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4)\n    },\n    mainButton: {},\n    animation: {\n        marginTop: theme.spacing(8),\n        maxWidth: 500,\n        maxHeight: 500,\n    }\n}))\n\nexport default function HomePage() {\n    const classes = useStyles()\n\n    const [isOpenCreateNotebookDialog, setIsOpenCreateNotebookDialog] = useState(false)\n\n    const defaultOptions = {\n        loop: true,\n        autoplay: true,\n        animationData: animationData,\n        rendererSettings: {\n            preserveAspectRatio: 'xMidYMid slice'\n        }\n    }\n\n    return (\n        <Container maxWidth=\"md\">\n            <Context.Provider value={{setIsOpenCreateNotebookDialog}}>\n                <div className={classes.root}>\n                    <CreateNotebookDialog open={isOpenCreateNotebookDialog}/>\n\n                    <Grow in={true}>\n                        <div>\n                            <Typography variant=\"h4\" className={classes.title}>\n                                Создавайте блокноты с заметками и задачами.\n                                <br/>\n                                Делитесь ими, просто отправив ссылку\n                            </Typography>\n                            <Button\n                                className={classes.mainButton}\n                                variant=\"outlined\"\n                                color=\"primary\"\n                                size=\"large\"\n                                startIcon={<ArrowForward/>}\n                                onClick={() => setIsOpenCreateNotebookDialog(true)}\n                            >\n                                Создать блокнот\n                            </Button>\n                        </div>\n                    </Grow>\n\n                    <div className={classes.animation}>\n                        <Lottie options={defaultOptions}/>\n                    </div>\n                </div>\n            </Context.Provider>\n        </Container>\n    )\n}","import {CREATE_ERROR, HAS_ERROR} from \"./types\"\n\nexport const setHasError = (hasError) => ({\n    type: HAS_ERROR,\n    payload: hasError\n})\n\nexport const createError = (error) => (dispatch) => {\n    dispatch(setHasError(true))\n\n    dispatch({\n        type: CREATE_ERROR,\n        payload: error\n    })\n}","export const NOTES_LOADING = 'NOTES_LOADING'\nexport const ADD_NOTE = 'ADD_NOTE'\nexport const DELETE_NOTE = 'DELETE_NOTE'\nexport const UPDATE_NOTE = 'UPDATE_NOTE'\nexport const GET_NOTES = 'GET_NOTES'\n\nexport const TASKERS_LOADING = 'TASKERS_LOADING'\nexport const GET_TASKERS = 'GET_TASKERS'\nexport const ADD_TASKER = 'ADD_TASKER'\nexport const UPDATE_TASKER = 'UPDATE_TASKER'\nexport const DELETE_TASKER = 'DELETE_TASKER'\n\nexport const ADD_TASK = 'ADD_TASK'\nexport const UPDATE_TASK = 'UPDATE_TASK'\nexport const DELETE_TASK = 'DELETE_TASK'\n\nexport const NOTEBOOK_LOADING = 'NOTEBOOK_LOADING'\nexport const GET_NOTEBOOK = 'GET_NOTEBOOK'\nexport const CREATE_NOTEBOOK = 'CREATE_NOTEBOOK'\nexport const DELETE_NOTEBOOK = 'DELETE_NOTEBOOK'\nexport const UPDATE_NOTEBOOK = 'UPDATE_NOTEBOOK'\n\nexport const CREATE_ERROR = 'CREATE_ERROR'\nexport const HAS_ERROR = 'HAS_ERROR'","import API from '../api/api'\n\nimport {\n    NOTES_LOADING,\n    ADD_NOTE,\n    DELETE_NOTE,\n    UPDATE_NOTE,\n    GET_NOTES\n} from './types'\nimport {createError} from \"./error\"\n\nexport const getNotes = (notebookId) => (dispatch) => {\n    dispatch(setNotesLoading(true))\n    API\n        .get(\"notes/get\", {\n        params: {\n            notebookId: notebookId,\n        }})\n        .then((result) => dispatch({\n            type: GET_NOTES,\n            payload: result.data\n        }))\n        .catch((error) => {\n            dispatch(setNotesLoading(false))\n            dispatch(createError({type: GET_NOTES}))\n        })\n}\n\nexport const addNote = (note) => ({\n    type: ADD_NOTE,\n    payload: note,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/notes/add',\n                method: 'POST',\n                data: note\n            },\n            commit: {type: 'ADD_NOTE_COMMIT', meta: {note}},\n            rollback: {type: 'ADD_NOTE_ROLLBACK', meta: {note}}\n        }\n    }\n})\n\nexport const removeNote = (id) => ({\n    type: DELETE_NOTE,\n    payload: id,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/notes/delete',\n                method: 'GET',\n                params: {noteId: id}\n            },\n            commit: {type: 'DELETE_NOTE_COMMIT', meta: {id}},\n            rollback: {type: 'DELETE_NOTE_ROLLBACK', meta: {id}}\n        }\n    }\n})\n\nexport const updateNote = (newNote) => ({\n    type: UPDATE_NOTE,\n    payload: newNote,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/notes/update',\n                method: 'POST',\n                data: newNote\n            },\n            commit: {type: 'UPDATE_NOTE_COMMIT', meta: {newNote}},\n            rollback: {type: 'UPDATE_NOTE_ROLLBACK', meta: {newNote}}\n        }\n    }\n})\n\nconst setNotesLoading = (isLoading) => ({\n    type: NOTES_LOADING,\n    payload: isLoading\n})\n","import React, {useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport {Close, Star, StarBorder} from \"@material-ui/icons\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport clsx from \"clsx\"\nimport {useDispatch} from \"react-redux\"\n\nimport {updateNote, removeNote} from \"../../actions/notes\"\nimport Fade from \"@material-ui/core/Fade\"\nimport Grow from \"@material-ui/core/Grow\"\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(1),\n    },\n    content: {\n        paddingBottom: 0,\n    },\n    actions: {\n        paddingTop: 0,\n        paddingLeft: theme.spacing(2),\n        paddingRight: theme.spacing(2),\n        display: 'flex',\n        justifyContent: \"space-between\",\n    },\n    title: {\n        marginBottom: theme.spacing(2),\n    },\n    text: {\n        whiteSpace: 'pre-line',\n    },\n    priority: {\n        borderColor: theme.palette.secondary.light,\n    },\n}))\n\nexport default function Note({data}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [expanded, setExpanded] = useState(false)\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n\n    return (\n        <Grow in={true}>\n            <Card\n                className={clsx(classes.root, data.highPriority && classes.priority)}\n                variant=\"outlined\"\n                onMouseOver={() => handleExpandClick()}\n                onMouseOut={() => handleExpandClick()}\n            >\n                <CardContent className={classes.content}>\n                    <Typography variant='h6' className={classes.title}>\n                        {data.title}\n                    </Typography>\n                    <Typography className={classes.text}>\n                        {data.text}\n                    </Typography>\n                </CardContent>\n                <Fade in={expanded}>\n                    <CardActions className={classes.actions}>\n                        <div/>\n                        <div>\n                            <Tooltip title={data.highPriority ? \"Высокий приоритет\" : \"Средний приоритет\"}>\n                                <Checkbox\n                                    checked={data.highPriority}\n                                    size=\"small\"\n                                    icon={<StarBorder/>}\n                                    checkedIcon={<Star/>}\n                                    onChange={() => {\n                                        dispatch(updateNote({...data, highPriority: !data.highPriority}))\n                                    }}\n                                />\n                            </Tooltip>\n                            <Tooltip title={data.done ? \"Выполнено\" : \"Не выполнено\"}>\n                                <Checkbox\n                                    checked={data.done}\n                                    size=\"small\"\n                                    color='primary'\n                                    onChange={() => {\n                                        dispatch(updateNote({...data, done: !data.done}))\n                                    }}\n                                />\n                            </Tooltip>\n                            <Tooltip title=\"Удалить\">\n                                <IconButton aria-label=\"Удалить\" size=\"small\" onClick={() => {\n                                    dispatch(removeNote(data.id))\n                                }}>\n                                    <Close/>\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    </CardActions>\n                </Fade>\n            </Card>\n        </Grow>\n    )\n}","import {\n    TASKERS_LOADING,\n    GET_TASKERS,\n    ADD_TASKER,\n    DELETE_TASKER,\n    ADD_TASK,\n    UPDATE_TASK,\n    DELETE_TASK, UPDATE_TASKER\n} from \"./types\"\nimport API from \"../api/api\"\nimport {createError} from \"./error\"\n\nexport const getTaskers = (notebookId) => (dispatch) => {\n    dispatch(setTaskersLoading(true))\n    API\n        .get(\"tasklists/getFullInfo\", {\n        params: {\n            notebookId: notebookId\n        }})\n        .then((result) => dispatch({\n            type: GET_TASKERS,\n            payload: result.data\n        }))\n        .catch(() => {\n            dispatch(createError({type: GET_TASKERS}))\n            dispatch(setTaskersLoading(false))\n        })\n}\n\nexport const addTasker = (tasker) => ({\n    type: ADD_TASKER,\n    payload: tasker,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/tasklists/add',\n                method: 'POST',\n                data: tasker\n            },\n            commit: {type: 'ADD_TASKER_COMMIT', meta: {tasker}},\n            rollback: {type: 'ADD_TASKER_ROLLBACK', meta: {tasker}}\n        }\n    }\n})\n\nexport const updateTasker = (newTasker) => ({\n    type: UPDATE_TASKER,\n    payload: newTasker,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/tasklists/update',\n                method: 'POST',\n                data: newTasker\n            },\n            commit: {type: 'UPDATE_TASKER_COMMIT', meta: {newTasker}},\n            rollback: {type: 'UPDATE_TASKER_ROLLBACK', meta: {newTasker}}\n        }\n    }\n})\n\nexport const removeTasker = (id) => ({\n    type: DELETE_TASKER,\n    payload: id,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/tasklists/delete',\n                method: 'GET',\n                params: {\n                    taskListId: id\n                }\n            },\n            commit: {type: 'DELETE_TASKER_COMMIT', meta: {id}},\n            rollback: {type: 'DELETE_TASKER_ROLLBACK', meta: {id}}\n        }\n    }\n})\n\nexport const addTask = (task) => ({\n    type: ADD_TASK,\n    payload: task,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/tasks/add',\n                method: 'POST',\n                data: task\n            },\n            commit: {type: 'ADD_TASK_COMMIT', meta: {task}},\n            rollback: {type: 'ADD_TASK_ROLLBACK', meta: {task}}\n        }\n    }\n})\n\nexport const updateTask = (newTask) => ({\n    type: UPDATE_TASK,\n    payload: newTask,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/tasks/update',\n                method: 'POST',\n                data: newTask\n            },\n            commit: {type: 'UPDATE_TASK_COMMIT', meta: {newTask}},\n            rollback: {type: 'UPDATE_TASK_ROLLBACK', meta: {newTask}}\n        }\n    }\n})\n\nexport const removeTask = (id) => ({\n    type: DELETE_TASK,\n    payload: id,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/tasks/delete',\n                method: 'GET',\n                params: {\n                    taskId: id\n                }\n            },\n            commit: {type: 'DELETE_TASK_COMMIT', meta: {id}},\n            rollback: {type: 'DELETE_TASK_ROLLBACK', meta: {id}}\n        }\n    }\n})\n\nconst setTaskersLoading = (isLoading) => ({\n    type: TASKERS_LOADING,\n    payload: isLoading\n})","import React from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Typography from \"@material-ui/core/Typography\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport {CheckCircle, CheckCircleOutline, HighlightOff} from \"@material-ui/icons\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {useDispatch} from \"react-redux\"\nimport {removeTask, updateTask} from \"../../actions/taskers\"\nimport clsx from \"clsx\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: \"flex\",\n        alignItems: 'center',\n    },\n    text: {\n        whiteSpace: 'pre-line',\n    },\n    textDone: {\n        textDecoration: 'line-through',\n    },\n    doneCheckBox: {\n        padding: theme.spacing(0.5),\n        marginRight: theme.spacing(1),\n    },\n    deleteButton: {\n        padding: theme.spacing(0.5),\n        marginRight: theme.spacing(1),\n        color: theme.palette.secondary.main\n    }\n}))\n\nexport default function Task({data}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    return (\n        <div className={classes.root}>\n            <Checkbox\n                className={classes.doneCheckBox}\n                checked={data.done}\n                color='primary'\n                icon={<CheckCircleOutline/>}\n                checkedIcon={<CheckCircle/>}\n                onChange={() => {\n                    dispatch(updateTask({...data, done: !data.done}))\n                }}\n            />\n\n            <IconButton\n                className={classes.deleteButton}\n                aria-label=\"Удалить\"\n                onClick={() => dispatch(removeTask(data.id))}\n            >\n                <HighlightOff/>\n            </IconButton>\n\n            <Typography className={clsx(classes.text, data.done && classes.textDone)}>\n                {data.text}\n            </Typography>\n\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Card from \"@material-ui/core/Card\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Task from \"../Task\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport {Close, Star, StarBorder} from \"@material-ui/icons\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {useDispatch} from \"react-redux\"\nimport {removeTasker, updateTasker} from \"../../actions/taskers\"\nimport Fade from \"@material-ui/core/Fade\"\nimport Grow from \"@material-ui/core/Grow\"\nimport clsx from \"clsx\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginBottom: theme.spacing(1),\n    },\n    title: {\n        marginBottom: theme.spacing(2),\n    },\n    content: {\n        paddingBottom: 0,\n    },\n    actions: {\n        paddingTop: 0,\n        paddingRight: theme.spacing(2),\n        display: 'flex',\n        justifyContent: \"space-between\",\n    },\n    priority: {\n        borderColor: theme.palette.secondary.light,\n    },\n}))\n\nexport default function Tasker({data}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [expanded, setExpanded] = useState(false)\n\n    const handleExpandClick = () => {\n        setExpanded(!expanded)\n    }\n\n    return (\n        <Grow in={true}>\n            <Card\n                className={clsx(classes.root, data.highPriority && classes.priority)}\n                variant=\"outlined\"\n                onMouseOver={() => handleExpandClick()}\n                onMouseOut={() => handleExpandClick()}\n            >\n                <CardContent className={classes.content}>\n                    <Typography variant='h6' className={classes.title}>\n                        {data.title}\n                    </Typography>\n\n                    {data.tasks.map((task) => <Task data={task} key={task.id}/>)}\n                </CardContent>\n\n                <Fade in={expanded}>\n                    <CardActions className={classes.actions}>\n                        <div/>\n                        <div>\n                            <Tooltip title={data.highPriority ? \"Высокий приоритет\" : \"Средний приоритет\"}>\n                                <Checkbox\n                                    checked={data.highPriority}\n                                    size='small'\n                                    icon={<StarBorder/>}\n                                    checkedIcon={<Star/>}\n                                    onChange={() => {\n                                        dispatch(updateTasker({...data, highPriority: !data.highPriority}))\n                                    }}\n                                />\n                            </Tooltip>\n                            <Tooltip title=\"Удалить\">\n                                <IconButton aria-label=\"Удалить\" size='small'\n                                            onClick={() => dispatch(removeTasker(data.id))}>\n                                    <Close/>\n                                </IconButton>\n                            </Tooltip>\n                        </div>\n                    </CardActions>\n                </Fade>\n            </Card>\n        </Grow>\n    )\n}","import React, {useContext} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport InputBase from \"@material-ui/core/InputBase\"\nimport Context from \"../../context\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(2),\n    },\n}))\n\nexport default function NoteBuilder({text}) {\n    const classes = useStyles()\n\n    const {setText} = useContext(Context)\n\n    return (\n        <InputBase\n            className={classes.root}\n            placeholder=\"Текст заметки\"\n            fullWidth={true}\n            value={text}\n            multiline\n            onInput={(event) => setText(event.target.value)}\n        />\n    )\n}","import React, {useContext} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport InputBase from \"@material-ui/core/InputBase\"\nimport Tooltip from '@material-ui/core/Tooltip'\nimport IconButton from \"@material-ui/core/IconButton\"\nimport {Add, CheckCircle, CheckCircleOutline, HighlightOff} from \"@material-ui/icons\"\nimport Context from \"../../context\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\n\nimport {v4 as uuidv4} from 'uuid'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    task: {\n        display: \"flex\",\n        alignItems: 'center',\n        width: '100%',\n    },\n    text: {\n    },\n    doneCheckBox: {\n        padding: theme.spacing(0.5),\n        marginRight: theme.spacing(1),\n    },\n    deleteButton: {\n        padding: theme.spacing(0.5),\n        marginRight: theme.spacing(1),\n        color: theme.palette.secondary.main\n    },\n}))\n\nexport default function TaskerBuilder({tasker}) {\n    const classes = useStyles()\n\n    const {setTasker} = useContext(Context)\n\n    const updateTask = (index, newTask) => {\n        const newTaskListsData = tasker.slice()\n        newTaskListsData[index] = newTask\n\n        setTasker(newTaskListsData)\n    }\n\n    const deleteTask = (index) => {\n        const newTaskListsData = tasker.slice()\n        newTaskListsData.splice(index, 1)\n        setTasker(newTaskListsData)\n    }\n\n    const addNewTask = () => {\n        const newTaskListsData = tasker.slice()\n        newTaskListsData.push({\n            id: uuidv4(),\n            done: false,\n            text: \"\"\n        })\n        setTasker(newTaskListsData)\n    }\n\n    const handleKeyDown = (event, taskIndex) => {\n        switch (event.key) {\n            case 'Enter':\n                addNewTask()\n                break\n            case 'Backspace':\n                if (tasker.length !== 1 && tasker[taskIndex].text === '') {\n                    deleteTask(taskIndex)\n                }\n                break\n            default:\n                break\n        }\n    }\n\n    return (\n        <div className={classes.root}>\n            {tasker.map((task, index) =>\n                <div className={classes.task} key={index}>\n                    <Checkbox\n                        className={classes.doneCheckBox}\n                        checked={task.done}\n                        color='primary'\n                        icon={<CheckCircleOutline/>}\n                        checkedIcon={<CheckCircle/>}\n                        onChange={() => {\n                            updateTask(index, {...task, done: !task.done})\n                        }}\n                    />\n\n                    {tasker.length !== 1 && <Tooltip title=\"Удалить\">\n                        <IconButton\n                            className={classes.deleteButton}\n                            aria-label=\"Удалить\"\n                            size='small'\n                            onClick={() => deleteTask(index)}\n                        >\n                            <HighlightOff/>\n                        </IconButton>\n                    </Tooltip>}\n\n                    <InputBase\n                        className={classes.text}\n                        placeholder=\"Текст задачи\"\n                        fullWidth={true}\n                        value={task.text}\n                        autoFocus={true}\n                        multiline={false}\n                        onInput={(event) => updateTask(index, {...task, text: event.target.value})}\n                        onKeyDown={(event) => handleKeyDown(event, index)}\n                    />\n                </div>\n            )}\n\n            <IconButton\n                color=\"primary\"\n                aria-label=\"Добавить задачу\"\n                onClick={() => addNewTask()}\n            >\n                <Add/>\n            </IconButton>\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport IconButton from '@material-ui/core/IconButton'\nimport Context from \"../../context\"\nimport Card from \"@material-ui/core/Card\"\nimport clsx from \"clsx\"\nimport CardContent from \"@material-ui/core/CardContent\"\nimport InputBase from \"@material-ui/core/InputBase\"\nimport CardActions from \"@material-ui/core/CardActions\"\nimport Tooltip from \"@material-ui/core/Tooltip\"\nimport Checkbox from \"@material-ui/core/Checkbox\"\nimport {Add, Assignment, AssignmentTurnedIn, Star, StarBorder} from \"@material-ui/icons\"\nimport Button from \"@material-ui/core/Button\"\nimport NoteBuilder from \"../NoteBuilder\"\nimport TaskerBuilder from \"../TaskerBuilder\"\n\nimport {addNote} from '../../actions/notes'\nimport {useDispatch} from \"react-redux\"\nimport {addTasker} from \"../../actions/taskers\"\nimport Grow from \"@material-ui/core/Grow\"\n\nimport {v4 as uuidv4} from 'uuid'\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        marginTop: theme.spacing(2),\n        marginBottom: theme.spacing(2),\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    inputTitle: {\n        height: theme.typography.h6.fontSize,\n        fontSize: theme.typography.h6.fontSize,\n        fontWeight: theme.typography.h6.fontWeight,\n    },\n    actions: {\n        padding: theme.spacing(2),\n        display: 'flex',\n        justifyContent: 'space-between',\n    },\n    priority: {\n        borderColor: theme.palette.secondary.light,\n    },\n    tools: {},\n}))\n\nexport default function Builder({notebookStringId}) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const [isTasker, setIsTasker] = useState(false)\n    const [title, setTitle] = useState('')\n\n    const [noteData, setNoteData] = useState('')\n    const [taskerData, setTaskerData] = useState([{\n        id: uuidv4(),\n        done: false,\n        text: \"\"\n    }])\n\n    const [highPriority, setHighPriority] = useState(false)\n\n    const handleAddButton = () => {\n        if (isTasker) {\n            dispatch(addTasker({\n                id: uuidv4(),\n                notebookId: notebookStringId,\n                title: title,\n                tasks: taskerData,\n                highPriority: highPriority\n            }))\n\n            setTitle('')\n            setTaskerData([{\n                done: false,\n                text: \"\"\n            }])\n        } else {\n            dispatch(addNote({\n                id: uuidv4(),\n                done: false,\n                notebookId: notebookStringId,\n                text: noteData,\n                title: title,\n                highPriority: highPriority\n            }))\n\n            setTitle('')\n            setNoteData('')\n            setHighPriority(false)\n        }\n    }\n\n    return (\n        <Grow in={true}>\n            <Card className={clsx(classes.root, highPriority && classes.priority)} variant='outlined'>\n                <CardContent>\n                    <InputBase\n                        className={classes.inputTitle}\n                        placeholder=\"Заголовок\"\n                        fullWidth={true}\n                        value={title}\n                        multiline\n                        onInput={(event) => setTitle(event.target.value)}\n                    />\n                    <Context.Provider value={{setText: setNoteData, setTasker: setTaskerData}}>\n                        {isTasker ? <TaskerBuilder tasker={taskerData}/> : <NoteBuilder text={noteData}/>}\n                    </Context.Provider>\n                </CardContent>\n                <CardActions className={classes.actions}>\n                    <div className={classes.tools}>\n                        <Tooltip title={highPriority ? \"Высокий приоритет\" : \"Средний приоритет\"}>\n                            <Checkbox\n                                checked={highPriority}\n                                icon={<StarBorder/>}\n                                checkedIcon={<Star/>}\n                                onChange={() => {\n                                    setHighPriority(!highPriority)\n                                }}\n                            />\n                        </Tooltip>\n                        <Tooltip title={isTasker ? \"Список задач\" : \"Заметка\"}>\n                            <IconButton\n                                aria-label={isTasker ? \"Список задач\" : \"Заметка\"}\n                                onClick={() => setIsTasker(!isTasker)}\n                            >\n                                {isTasker ? <AssignmentTurnedIn/> : <Assignment/>}\n                            </IconButton>\n                        </Tooltip>\n                    </div>\n                    <Button\n                        variant='contained'\n                        color={highPriority ? \"secondary\" : \"primary\"}\n                        startIcon={<Add/>}\n                        disableElevation\n                        onClick={() => handleAddButton()}\n                    >\n                        Добавить\n                    </Button>\n                </CardActions>\n            </Card>\n        </Grow>\n    )\n}","import {\n    NOTEBOOK_LOADING,\n    CREATE_NOTEBOOK,\n    DELETE_NOTEBOOK,\n    UPDATE_NOTEBOOK,\n    GET_NOTEBOOK\n} from './types'\nimport API from \"../api/api\"\nimport {createError} from \"./error\"\n\nexport const createNotebook = (notebook) => ({\n    type: CREATE_NOTEBOOK,\n    payload: notebook,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/notebooks/add',\n                method: 'POST',\n                data: notebook\n            },\n            commit: {type: 'CREATE_NOTEBOOK_COMMIT', meta: {notebook}},\n            rollback: {type: 'CREATE_NOTEBOOK_ROLLBACK', meta: {notebook}}\n        }\n    }\n})\n\nexport const getNotebook = (stringId) => (dispatch) => {\n    dispatch(setNotebookLoading(true))\n    API\n        .get('notebooks/get', {\n            params: {\n                notebookId: stringId\n            }\n        })\n        .then((result) => dispatch({\n            type: GET_NOTEBOOK,\n            payload: result.data\n        }))\n        .catch((error) => {\n            dispatch(setNotebookLoading(false))\n\n            if (error.response) {\n                dispatch(createError({type: GET_NOTEBOOK, code: error.response.status}))\n            } else {\n                dispatch(createError({type: GET_NOTEBOOK}))\n            }\n\n        })\n}\n\nexport const updateNotebookName = (stringId, name) => ({\n    type: UPDATE_NOTEBOOK,\n    payload: name,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/notebooks/update',\n                method: 'GET',\n                params: {notebookId: stringId, name: name}\n            },\n            commit: {type: 'UPDATE_NOTEBOOK_COMMIT', meta: {name}},\n            rollback: {type: 'UPDATE_NOTEBOOK_ROLLBACK', meta: {name}}\n        }\n    }\n});\n\nexport const deleteNotebook = (stringId) => ({\n    type: DELETE_NOTEBOOK,\n    payload: stringId,\n    meta: {\n        offline: {\n            effect: {\n                url: 'https://dumaev.digital/api/v1/notebooks/delete',\n                method: 'GET',\n                params: {id: stringId}\n            },\n            commit: {type: 'DELETE_NOTEBOOK_COMMIT', meta: {stringId}},\n            rollback: {type: 'DELETE_NOTEBOOK_ROLLBACK', meta: {stringId}}\n        }\n    }\n})\n\nconst setNotebookLoading = (isLoading) => ({\n    type: NOTEBOOK_LOADING,\n    payload: isLoading\n})","import React, {useContext, useState} from 'react'\nimport {makeStyles} from '@material-ui/core/styles'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport Divider from '@material-ui/core/Divider'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport {\n    BookOutlined, DeleteOutline, EditOutlined,\n    ShareOutlined\n} from \"@material-ui/icons\"\nimport Context from \"../../context\"\nimport {NavLink} from \"react-router-dom\"\nimport ListSubheader from \"@material-ui/core/ListSubheader\"\nimport {Hidden} from \"@material-ui/core\"\nimport copy from \"copy-to-clipboard\"\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {},\n    title: {\n        padding: theme.spacing(1)\n    },\n    list: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: 260,\n        padding: 0\n    },\n    itemIconNotebook: {\n        color: theme.palette.primary.light\n    },\n    itemIconTag: {\n        color: theme.palette.primary.light\n    },\n    itemIconChange: {\n        color: theme.palette.primary.light\n    },\n    itemIconDelete: {\n        color: theme.palette.secondary.main\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    link: {\n        textDecoration: \"none\",\n        color: 'inherit',\n    }\n}))\n\nexport default function Menu({isOpenMenu, notebookUrl}) {\n    const classes = useStyles()\n    const {toggleMenu} = useContext(Context)\n    const {\n        setIsOpenCreateNotebookDialog,\n        setIsOpenDeleteNotebookDialog,\n        setIsOpenUpdateNotebookDialog\n    } = useContext(Context)\n\n    return (\n        <Drawer className={classes.root} transitionDuration={150} open={isOpenMenu} onClose={() => toggleMenu()}>\n            <NavLink to={'/'} activeClassName={classes.link}>\n                <ListItem button>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        Shared notes\n                    </Typography>\n                </ListItem>\n            </NavLink>\n            <Divider/>\n            <List className={classes.list} subheader={<ListSubheader>Общие настройки</ListSubheader>}>\n                <ListItem button onClick={() => {\n                    setIsOpenCreateNotebookDialog(true)\n                    toggleMenu()\n                }}>\n                    <ListItemIcon className={classes.itemIconNotebook}><BookOutlined/></ListItemIcon>\n                    <ListItemText primary='Создать блокнот'/>\n                </ListItem>\n            </List>\n            <List className={classes.list} subheader={<ListSubheader>Настройки текущего блокнота</ListSubheader>}>\n                <Hidden smUp>\n                    <ListItem button onClick={() => copy('dumaevrinat.github.io/shnotes/#' + notebookUrl)}>\n                        <ListItemIcon className={classes.itemIconTag}><ShareOutlined/></ListItemIcon>\n                        <ListItemText primary=\"Скопировать ссылку\"/>\n                    </ListItem>\n                </Hidden>\n                <ListItem button onClick={() => setIsOpenUpdateNotebookDialog(true)}>\n                    <ListItemIcon className={classes.itemIconChange}><EditOutlined/></ListItemIcon>\n                    <ListItemText primary=\"Изменить блокнот\"/>\n                </ListItem>\n                <ListItem button onClick={() => setIsOpenDeleteNotebookDialog(true)}>\n                    <ListItemIcon className={classes.itemIconDelete}><DeleteOutline/></ListItemIcon>\n                    <ListItemText primary=\"Удалить блокнот\"/>\n                </ListItem>\n            </List>\n        </Drawer>\n    )\n}","import React, {useContext} from 'react'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from \"@material-ui/core/Toolbar\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Context from \"../../context\"\nimport {EditOutlined, Share, Sync, SyncDisabled} from \"@material-ui/icons\"\nimport Button from \"@material-ui/core/Button\"\nimport copy from \"copy-to-clipboard\"\nimport Hidden from \"@material-ui/core/Hidden\"\nimport {useSelector} from \"react-redux\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n        color: 'inherit'\n    },\n    title: {\n        marginRight: theme.spacing(2)\n    },\n    editButton: {\n        color: 'inherit',\n        marginRight: theme.spacing(2)\n    },\n    status: {\n        display: 'flex',\n        alignItems: 'center',\n        marginLeft: \"auto\",\n        marginTop: \"auto\",\n        marginBottom: \"auto\"\n    }\n}))\n\nexport default function Header({title, notebookUrl}) {\n    const classes = useStyles()\n\n    const {toggleMenu, setIsOpenUpdateNotebookDialog} = useContext(Context)\n    const status = useSelector(state => state.offline.online)\n\n    return (\n        <AppBar position=\"static\" color=\"inherit\" elevation={0}>\n            <Toolbar className={classes.root}>\n                    <IconButton edge=\"start\" className={classes.menuButton} onClick={() => toggleMenu()}>\n                        <MenuIcon/>\n                    </IconButton>\n                    <Typography variant=\"h6\" className={classes.title}>\n                        {title}\n                    </Typography>\n                    {title &&\n                    <Hidden xsDown>\n                        <IconButton\n                            edge=\"start\"\n                            className={classes.editButton}\n                            onClick={() => setIsOpenUpdateNotebookDialog(true)}\n                        >\n                            <EditOutlined/>\n                        </IconButton>\n                        <Button\n                            variant='outlined'\n                            color='primary'\n                            size='small'\n                            startIcon={<Share/>}\n                            disableElevation\n                            onClick={() => copy('dumaevrinat.github.io/shnotes/#' + notebookUrl)}\n                        >\n                            Скопировать ссылку\n                        </Button>\n                    </Hidden>\n                    }\n                <div className={classes.status}>\n                    {status ?\n                        <Tooltip title=\"В сети\"><Sync/></Tooltip> :\n                        <Tooltip title=\"Не в сети\"><SyncDisabled/></Tooltip>\n                    }\n                </div>\n            </Toolbar>\n        </AppBar>\n    )\n}","import {makeStyles} from \"@material-ui/core/styles\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport TextField from \"@material-ui/core/TextField\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport React, {useContext, useEffect, useState} from \"react\"\nimport Context from \"../../context\"\nimport {useDispatch, useSelector} from \"react-redux\"\nimport {updateNotebookName} from \"../../actions/notebook\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    }\n}))\n\nexport default function UpdateNotebookDialog({open}) {\n    const classes = useStyles()\n\n    const dispatch = useDispatch()\n\n    const {setIsOpenUpdateNotebookDialog}= useContext(Context)\n    const notebookName = useSelector(state => state.notebook.notebook.name)\n    const id = useSelector(state => state.notebook.notebook.id)\n\n    const [notebookNameTextField, setNotebookNameTextField] = useState(notebookName)\n\n    const handleUpdateNotebook = () => {\n        dispatch(updateNotebookName(id, notebookNameTextField))\n        setIsOpenUpdateNotebookDialog(false)\n    }\n\n    useEffect(() => {\n        setNotebookNameTextField(notebookName)\n    }, [notebookName])\n\n    return (\n        <Dialog\n            className={classes.root}\n            open={open}\n            onClose={() => setIsOpenUpdateNotebookDialog(false)}\n        >\n            <DialogTitle>Изменить блокнот</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Введите новое название блокнота\n                </DialogContentText>\n                <TextField\n                    autoFocus\n                    fullWidth\n                    label=\"Название блокнота\"\n                    type=\"text\"\n                    value={notebookNameTextField}\n                    onInput={(event) => setNotebookNameTextField(event.target.value)}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setIsOpenUpdateNotebookDialog(false)} color=\"primary\">\n                    Назад\n                </Button>\n                <Button onClick={() => handleUpdateNotebook()} color=\"primary\">\n                    Изменить\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n\n}","import {makeStyles} from \"@material-ui/core/styles\"\nimport {useHistory} from \"react-router-dom\"\nimport React, {useContext} from \"react\"\nimport Context from \"../../context\"\nimport API from \"../../api/api\"\nimport Dialog from \"@material-ui/core/Dialog\"\nimport DialogTitle from \"@material-ui/core/DialogTitle\"\nimport DialogContent from \"@material-ui/core/DialogContent\"\nimport DialogContentText from \"@material-ui/core/DialogContentText\"\nimport DialogActions from \"@material-ui/core/DialogActions\"\nimport Button from \"@material-ui/core/Button\"\nimport {useSelector} from \"react-redux\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n    }\n}))\n\nexport default function DeleteNotebookDialog({open}) {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const {setIsOpenDeleteNotebookDialog}= useContext(Context)\n    const stringId = useSelector(state => state.notebook.notebook.id)\n\n    const handleDeleteNotebook = () => {\n        API\n            .get(\"notebooks/delete\", {\n                params: {\n                    notebookId: stringId\n                }\n            })\n            .then(() => {\n                history.push(`/`)\n            })\n            .catch(() => {\n            })\n\n        setIsOpenDeleteNotebookDialog(false)\n    }\n\n    return (\n        <Dialog\n            className={classes.root}\n            open={open}\n            onClose={() => setIsOpenDeleteNotebookDialog(false)}\n        >\n            <DialogTitle>Удалить блокнот</DialogTitle>\n            <DialogContent>\n                <DialogContentText>\n                    Удалить блокнот?\n                </DialogContentText>\n\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={() => setIsOpenDeleteNotebookDialog(false)} color=\"primary\">\n                    Назад\n                </Button>\n                <Button onClick={() => handleDeleteNotebook()} color=\"primary\">\n                    Удалить\n                </Button>\n            </DialogActions>\n        </Dialog>\n    )\n}","import {\n    ADD_NOTE,\n    ADD_TASK,\n    ADD_TASKER, CREATE_NOTEBOOK,\n    DELETE_NOTE, DELETE_NOTEBOOK, DELETE_TASK,\n    DELETE_TASKER, GET_NOTEBOOK,\n    GET_NOTES,\n    GET_TASKERS,\n    UPDATE_NOTE, UPDATE_NOTEBOOK, UPDATE_TASK, UPDATE_TASKER\n} from \"../actions/types\"\n\nexport const getErrorMessageByType = (type) => {\n    switch (type) {\n        case ADD_NOTE:\n            return 'Не удалось добавить заметку'\n        case DELETE_NOTE:\n            return 'Не удалось удалить заметку'\n        case UPDATE_NOTE:\n            return 'Не удалось обновить заметку'\n        case GET_NOTES:\n            return 'Не удалось получить заметки'\n        case GET_TASKERS:\n            return 'Не удалось получить списки задач'\n        case ADD_TASKER:\n            return 'Не удалось добавить список задач'\n        case DELETE_TASKER:\n            return 'Не удалось удалить список задач'\n        case UPDATE_TASKER:\n            return 'Не удалось обновить список задач'\n        case ADD_TASK:\n            return 'Не удалось добавить задачу'\n        case UPDATE_TASK:\n            return 'Не удалось обновить задачу'\n        case DELETE_TASK:\n            return 'Не удалось удалить задачу'\n        case GET_NOTEBOOK:\n            return 'Не удалось получить блокнот'\n        case CREATE_NOTEBOOK:\n            return 'Не удалось создать блокнот'\n        case DELETE_NOTEBOOK:\n            return 'Не удалось удалить блокнот'\n        case UPDATE_NOTEBOOK:\n            return 'Не удалось обновить блокнот'\n        default:\n            return 'Ошибка'\n\n    }\n}\n","import React, {useState, useEffect} from \"react\"\nimport Container from '@material-ui/core/Container'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Note from \"../../Note\"\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport {makeStyles} from \"@material-ui/core/styles\"\nimport Context from \"../../../context\"\nimport Tasker from \"../../Tasker\"\nimport Typography from \"@material-ui/core/Typography\"\nimport IconButton from \"@material-ui/core/IconButton\"\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore'\nimport clsx from \"clsx\"\nimport Collapse from \"@material-ui/core/Collapse\"\nimport Builder from \"../../Builder\"\n\nimport {useSelector, useDispatch} from \"react-redux\"\nimport {getNotes} from '../../../actions/notes'\nimport {getTaskers} from \"../../../actions/taskers\"\nimport {getNotebook} from \"../../../actions/notebook\"\nimport Menu from \"../../Menu\"\nimport Header from \"../../Header\"\nimport CreateNotebookDialog from \"../../DialogCreateNotebook\"\nimport {setHasError} from \"../../../actions/error\"\nimport UpdateNotebookDialog from \"../../DialogUpdateNotebook\"\nimport Divider from \"@material-ui/core/Divider\"\nimport DeleteNotebookDialog from \"../../DialogDeleteNotebook\"\nimport {getErrorMessageByType} from \"../../../utils/getErrorMessage\"\nimport {GET_NOTEBOOK} from \"../../../actions/types\"\nimport {useHistory} from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n\n    },\n    progressBar: {\n        marginTop: theme.spacing(2),\n        color: theme.palette.primary.light,\n    },\n    title: {\n        marginTop: theme.spacing(1),\n    },\n    expand: {\n        transform: 'rotate(0deg)',\n        marginLeft: 'auto',\n        transition: theme.transitions.create('transform', {\n            duration: theme.transitions.duration.shortest,\n        }),\n    },\n    expandOpen: {\n        transform: 'rotate(180deg)',\n    }\n}))\n\nexport default function NotebookPage(props) {\n    const classes = useStyles()\n    const dispatch = useDispatch()\n\n    const history = useHistory()\n\n    const [expandedNotes, setExpandedNotes] = useState(true)\n    const [expandedTaskLists, setExpandedTaskLists] = useState(true)\n\n    const hasError = useSelector(state => state.error.hasError)\n    const error = useSelector(state => state.error.error)\n\n    const title = useSelector(state => state.notebook.notebook.name)\n\n    const notes = useSelector(state => state.notes.notes)\n    const taskers = useSelector(state => state.taskers.taskers)\n\n    const isLoadingNotes = useSelector(state => state.notes.noteLoading)\n    const isLoadingTaskers = useSelector(state => state.taskers.taskerLoading)\n\n    const [isOpenMenu, setIsOpenMenu] = useState(false)\n    const [isOpenCreateNotebookDialog, setIsOpenCreateNotebookDialog] = useState(false)\n    const [isOpenUpdateNotebookDialog, setIsOpenUpdateNotebookDialog] = useState(false)\n    const [isOpenDeleteNotebookDialog, setIsOpenDeleteNotebookDialog] = useState(false)\n\n    const toggleMenu = () => {\n        setIsOpenMenu(!isOpenMenu)\n    }\n\n    const closeSnackbar = (event, reason) => {\n        if (reason === 'clickaway') {\n            return\n        }\n\n        dispatch(setHasError(false))\n    }\n\n    useEffect(() => {\n        dispatch(getNotebook(props.match.params.stringId))\n        dispatch(getNotes(props.match.params.stringId))\n        dispatch(getTaskers(props.match.params.stringId))\n    }, [dispatch, props.match.params.stringId])\n\n    useEffect(() => {\n        if (hasError && error.type === GET_NOTEBOOK && error.code === 400) {\n            dispatch(setHasError(false))\n            history.push('/notebooknotfound')\n        }\n    }, [hasError, error])\n\n    return (\n        <Context.Provider value={{\n            toggleMenu,\n            setIsOpenCreateNotebookDialog,\n            setIsOpenUpdateNotebookDialog,\n            setIsOpenDeleteNotebookDialog\n        }}>\n            <Menu isOpenMenu={isOpenMenu} notebookUrl={props.location.pathname}/>\n            <Header title={title} notebookUrl={props.location.pathname}/>\n            <Divider/>\n\n            <CreateNotebookDialog open={isOpenCreateNotebookDialog}/>\n            <UpdateNotebookDialog open={isOpenUpdateNotebookDialog}/>\n            <DeleteNotebookDialog open={isOpenDeleteNotebookDialog}/>\n\n            <Container className={classes.root} maxWidth=\"md\">\n                <Builder notebookStringId={props.match.params.stringId}/>\n\n                <div className={classes.title}>\n                    <Typography variant='overline'>\n                        Списки задач\n                    </Typography>\n\n                    <IconButton\n                        className={clsx(classes.expand, expandedTaskLists && classes.expandOpen)}\n                        onClick={() => setExpandedTaskLists(!expandedTaskLists)}\n                        size='small'\n                    >\n                        <ExpandMoreIcon/>\n                    </IconButton>\n                </div>\n\n                <Collapse in={expandedTaskLists} timeout=\"auto\">\n                    {isLoadingTaskers && <CircularProgress className={classes.progressBar}/>}\n                    <div className={classes.taskers}>\n                        {!isLoadingTaskers && taskers.map((tasker) => <Tasker data={tasker} key={tasker.id}/>)}\n                    </div>\n                </Collapse>\n\n                <div className={classes.title}>\n                    <Typography variant='overline' className={classes.title}>\n                        Заметки\n                    </Typography>\n\n                    <IconButton\n                        className={clsx(classes.expand, expandedNotes && classes.expandOpen)}\n                        onClick={() => setExpandedNotes(!expandedNotes)}\n                        size='small'\n                    >\n                        <ExpandMoreIcon/>\n                    </IconButton>\n                </div>\n\n                <Collapse in={expandedNotes} timeout=\"auto\">\n                    {isLoadingNotes && <CircularProgress className={classes.progressBar}/>}\n                    {!isLoadingNotes && notes.map((note) => <Note data={note} key={note.id}/>)}\n\n                </Collapse>\n\n                <Snackbar\n                    anchorOrigin={{vertical: 'bottom', horizontal: 'left'}}\n                    autoHideDuration={2000}\n                    open={hasError}\n                    message={getErrorMessageByType(error.type)}\n                    onClose={closeSnackbar}\n                />\n            </Container>\n        </Context.Provider>\n    )\n}","import {makeStyles} from \"@material-ui/core/styles\"\nimport React from \"react\"\nimport Container from \"@material-ui/core/Container\"\nimport Grow from \"@material-ui/core/Grow\"\nimport Typography from \"@material-ui/core/Typography\"\nimport Button from \"@material-ui/core/Button\"\nimport {HomeOutlined} from \"@material-ui/icons\"\nimport {useHistory} from \"react-router-dom\"\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        flexDirection: 'column',\n        justifyContent: \"space-between\",\n    },\n    title: {\n        marginTop: theme.spacing(4),\n        marginBottom: theme.spacing(4)\n    },\n    mainButton: {},\n    animation: {\n        marginTop: theme.spacing(8),\n    }\n}))\n\nexport default function NotebookNotFoundPage() {\n    const classes = useStyles()\n    const history = useHistory()\n\n    const handleGoHome = () => {\n        history.push('/')\n    }\n\n    return (\n        <div className={classes.root}>\n            <Container maxWidth=\"md\">\n\n                <Grow in={true}>\n                    <div>\n                        <Typography variant=\"h4\" className={classes.title}>\n                            Блокнот не найден :(\n                        </Typography>\n                        <Button\n                            className={classes.mainButton}\n                            variant=\"outlined\"\n                            color=\"primary\"\n                            size=\"large\"\n                            startIcon={<HomeOutlined/>}\n                            onClick={() => handleGoHome()}\n                        >\n                            Перейти на главную\n                        </Button>\n                    </div>\n                </Grow>\n            </Container>\n            <div className={classes.animation}></div>\n        </div>\n    )\n}","import React from 'react'\nimport {Route, Switch} from 'react-router-dom'\nimport HomePage from \"../Pages/HomePage\"\nimport NotebookPage from \"../Pages/NotebookPage\"\nimport {createMuiTheme, responsiveFontSizes} from \"@material-ui/core\"\nimport {ThemeProvider} from \"@material-ui/styles\"\nimport NotebookNotFoundPage from \"../Pages/NotebookNotFoundPage\"\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n            light: '#7c4dff',\n            main: '#7c4dff',\n        },\n        secondary: {\n            light: '#ff4081',\n            main: '#ff4081',\n        },\n    },\n})\n\nexport default function App() {\n\n    return (\n        <ThemeProvider theme={responsiveFontSizes(theme)}>\n                <div className=\"App\">\n                    <Switch>\n                        <Route exact path='/' component={HomePage}/>\n                        <Route path='/notebook/:stringId' component={NotebookPage}/>\n                        <Route path='/notebooknotfound' component={NotebookNotFoundPage}/>\n                    </Switch>\n                </div>\n        </ThemeProvider>\n    )\n}\n","import {\n    NOTES_LOADING,\n    ADD_NOTE,\n    DELETE_NOTE,\n    UPDATE_NOTE,\n    GET_NOTES\n} from '../actions/types'\n\nconst initialState ={\n    notes: [],\n    noteLoading: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case NOTES_LOADING:\n            return {\n                ...state,\n                noteLoading: action.payload\n            }\n        case ADD_NOTE:\n            return {\n                ...state,\n                notes: [action.payload, ...state.notes]\n            }\n        case DELETE_NOTE:\n            return {\n                ...state,\n                notes: state.notes.filter((item) => item.id !== action.payload)\n            }\n        case UPDATE_NOTE:\n            return {\n                ...state,\n                notes: state.notes.map((note) => note.id === action.payload.id ? action.payload : note)\n            }\n        case GET_NOTES:\n            return {\n                ...state,\n                notes: action.payload,\n                noteLoading: false\n            }\n        default:\n            return state\n\n    }\n}","import {\n    TASKERS_LOADING,\n    GET_TASKERS,\n    ADD_TASKER,\n    DELETE_TASKER,\n    ADD_TASK,\n    UPDATE_TASK,\n    DELETE_TASK, UPDATE_TASKER\n} from \"../actions/types\"\n\nconst initialState = {\n    taskers: [],\n    taskerLoading: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case TASKERS_LOADING:\n            return {\n                ...state,\n                taskerLoading: action.payload\n            }\n        case GET_TASKERS:\n            return {\n                ...state,\n                taskers: action.payload,\n                taskerLoading: false\n            }\n        case ADD_TASKER:\n            return {\n                ...state,\n                taskers: [action.payload, ...state.taskers]\n            }\n        case UPDATE_TASKER:\n            return {\n                ...state,\n                taskers: state.taskers.map((tasker) => tasker.id === action.payload.id ? action.payload : tasker)\n            }\n        case DELETE_TASKER:\n            return {\n                ...state,\n                taskers: state.taskers.filter((item) => item.id !== action.payload)\n            }\n        case ADD_TASK:\n            let taskerIndex = state.taskers.findIndex((item) => item.id === action.payload.taskListId)\n            const newTaskers = state.taskers.slice()\n            newTaskers[taskerIndex].tasks.unshift(action.payload)\n\n            return {\n                ...state,\n                taskers: newTaskers\n            }\n        case UPDATE_TASK:\n            return {\n                ...state,\n                taskers: state.taskers.map((tasker) => {\n                    return {\n                        ...tasker,\n                        tasks: tasker.tasks.map((task) => task.id === action.payload.id ? action.payload : task)\n                    }\n                })\n            }\n        case DELETE_TASK:\n            return {\n                ...state,\n                taskers: state.taskers.map((tasker) => {\n                    return {\n                        ...tasker,\n                        tasks: tasker.tasks.filter((item) => item.id !== action.payload)\n                    }\n                })\n            }\n        default:\n            return state\n    }\n}","import {\n    NOTEBOOK_LOADING,\n    CREATE_NOTEBOOK,\n    DELETE_NOTEBOOK,\n    UPDATE_NOTEBOOK,\n    GET_NOTEBOOK\n} from \"../actions/types\"\n\nconst initialState = {\n    notebook: {\n        id: '',\n        name: ''\n    },\n    notebookLoading: false\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case NOTEBOOK_LOADING:\n            return {\n                ...state,\n                notebookLoading: action.payload\n            }\n        case GET_NOTEBOOK:\n            return {\n                ...state,\n                notebook: {...action.payload},\n                notebookLoading: false\n            }\n        case CREATE_NOTEBOOK:\n            return {\n                ...state,\n                notebook: action.payload,\n                notebookLoading: false\n            }\n        case UPDATE_NOTEBOOK:\n            return {\n                ...state,\n                notebook: {\n                    id: state.notebook.id,\n                    name: action.payload\n                }\n            }\n        default:\n            return state\n    }\n}","import {CREATE_ERROR, HAS_ERROR} from \"../actions/types\"\n\nconst initialState = {\n    hasError: false,\n    error: {\n        type: null,\n        code: null\n    }\n}\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case CREATE_ERROR:\n            return {\n                ...state,\n                error: action.payload\n            }\n        case HAS_ERROR:\n            return {\n                ...state,\n                hasError: action.payload\n            }\n        default:\n            return state\n    }\n}","import { combineReducers} from \"redux\"\n\nimport notes from './notes'\nimport taskers from './taskers'\nimport notebook from './notebook'\nimport error from \"./error\"\n\nexport default combineReducers({notes, taskers, notebook, error})","import {applyMiddleware, createStore, compose} from 'redux'\nimport rootReducer from '../reducers'\nimport thunk from 'redux-thunk'\nimport { offline } from \"redux-offline\"\nimport config  from \"redux-offline/lib/defaults\"\nimport axios from \"axios\";\n\nconst effect = (effect, action) => axios(effect)\n\nconst discard = (error, _action, _retries) => {\n    const { request, response } = error\n\n    if (!request) throw error\n    if (!response) return false\n\n    return 400 <= response.status && response.status < 500\n};\n\nconst customConfig = {\n    ...config,\n    effect,\n    discard\n}\n\nexport default createStore(rootReducer, compose(applyMiddleware(thunk), offline(customConfig)))\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport {HashRouter} from 'react-router-dom'\nimport App from \"./Components/App\"\n\nimport {Provider} from 'react-redux'\n\nimport store from './store'\n\nReactDOM.render(\n    <Provider store={store}>\n        <HashRouter>\n            <App/>\n        </HashRouter>\n    </Provider>,\n    document.getElementById('root')\n)"],"sourceRoot":""}